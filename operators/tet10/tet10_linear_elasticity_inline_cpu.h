#ifndef TET10_LINEAR_ELASTICITY_INLINE_CPU_H
#define TET10_LINEAR_ELASTICITY_INLINE_CPU_H

#include "tet10_inline_cpu.h"

static SFEM_INLINE void tet10_linear_elasticity_diag_adj(const scalar_t *const SFEM_RESTRICT
                                                                 adjugate,
                                                         const scalar_t jacobian_determinant,
                                                         const scalar_t mu,
                                                         const scalar_t lambda,
                                                         const scalar_t qx,
                                                         const scalar_t qy,
                                                         const scalar_t qz,
                                                         const scalar_t qw,
                                                         accumulator_t *const SFEM_RESTRICT outx,
                                                         accumulator_t *const SFEM_RESTRICT outy,
                                                         accumulator_t *const SFEM_RESTRICT outz) {
    const scalar_t x0 = POW2(adjugate[1] + adjugate[4] + adjugate[7]);
    const scalar_t x1 = mu * x0;
    const scalar_t x2 = POW2(adjugate[2] + adjugate[5] + adjugate[8]);
    const scalar_t x3 = mu * x2;
    const scalar_t x4 = lambda + 2 * mu;
    const scalar_t x5 = POW2(adjugate[0] + adjugate[3] + adjugate[6]);
    const scalar_t x6 = 4 * qx;
    const scalar_t x7 = 4 * qy;
    const scalar_t x8 = 4 * qz;
    const scalar_t x9 = 1.0 / jacobian_determinant;
    const scalar_t x10 = (1.0 / 6.0) * x9;
    const scalar_t x11 = x10 * POW2(x6 + x7 + x8 - 3);
    const scalar_t x12 = POW2(adjugate[1]);
    const scalar_t x13 = mu * x12;
    const scalar_t x14 = POW2(adjugate[2]);
    const scalar_t x15 = mu * x14;
    const scalar_t x16 = POW2(adjugate[0]);
    const scalar_t x17 = x10 * POW2(x6 - 1);
    const scalar_t x18 = POW2(adjugate[4]);
    const scalar_t x19 = mu * x18;
    const scalar_t x20 = POW2(adjugate[5]);
    const scalar_t x21 = mu * x20;
    const scalar_t x22 = POW2(adjugate[3]);
    const scalar_t x23 = x10 * POW2(x7 - 1);
    const scalar_t x24 = POW2(adjugate[7]);
    const scalar_t x25 = mu * x24;
    const scalar_t x26 = POW2(adjugate[8]);
    const scalar_t x27 = mu * x26;
    const scalar_t x28 = POW2(adjugate[6]);
    const scalar_t x29 = x10 * POW2(x8 - 1);
    const scalar_t x30 = adjugate[4] * qx;
    const scalar_t x31 = adjugate[7] * qx;
    const scalar_t x32 = qz - 1;
    const scalar_t x33 = 2 * qx + qy + x32;
    const scalar_t x34 = POW2(adjugate[1] * x33 + x30 + x31);
    const scalar_t x35 = mu * x34;
    const scalar_t x36 = adjugate[5] * qx;
    const scalar_t x37 = adjugate[8] * qx;
    const scalar_t x38 = POW2(adjugate[2] * x33 + x36 + x37);
    const scalar_t x39 = mu * x38;
    const scalar_t x40 = adjugate[3] * qx;
    const scalar_t x41 = adjugate[6] * qx;
    const scalar_t x42 = POW2(adjugate[0] * x33 + x40 + x41);
    const scalar_t x43 = (8.0 / 3.0) * x9;
    const scalar_t x44 = adjugate[1] * qy;
    const scalar_t x45 = POW2(x30 + x44);
    const scalar_t x46 = mu * x45;
    const scalar_t x47 = adjugate[2] * qy;
    const scalar_t x48 = POW2(x36 + x47);
    const scalar_t x49 = mu * x48;
    const scalar_t x50 = adjugate[0] * qy;
    const scalar_t x51 = POW2(x40 + x50);
    const scalar_t x52 = adjugate[7] * qy;
    const scalar_t x53 = qx + 2 * qy + x32;
    const scalar_t x54 = POW2(adjugate[4] * x53 + x44 + x52);
    const scalar_t x55 = mu * x54;
    const scalar_t x56 = adjugate[8] * qy;
    const scalar_t x57 = POW2(adjugate[5] * x53 + x47 + x56);
    const scalar_t x58 = mu * x57;
    const scalar_t x59 = adjugate[6] * qy;
    const scalar_t x60 = POW2(adjugate[3] * x53 + x50 + x59);
    const scalar_t x61 = adjugate[1] * qz;
    const scalar_t x62 = adjugate[4] * qz;
    const scalar_t x63 = qx + qy + 2 * qz - 1;
    const scalar_t x64 = POW2(adjugate[7] * x63 + x61 + x62);
    const scalar_t x65 = mu * x64;
    const scalar_t x66 = adjugate[2] * qz;
    const scalar_t x67 = adjugate[5] * qz;
    const scalar_t x68 = POW2(adjugate[8] * x63 + x66 + x67);
    const scalar_t x69 = mu * x68;
    const scalar_t x70 = adjugate[0] * qz;
    const scalar_t x71 = adjugate[3] * qz;
    const scalar_t x72 = POW2(adjugate[6] * x63 + x70 + x71);
    const scalar_t x73 = POW2(x31 + x61);
    const scalar_t x74 = mu * x73;
    const scalar_t x75 = POW2(x37 + x66);
    const scalar_t x76 = mu * x75;
    const scalar_t x77 = POW2(x41 + x70);
    const scalar_t x78 = POW2(x52 + x62);
    const scalar_t x79 = mu * x78;
    const scalar_t x80 = POW2(x56 + x67);
    const scalar_t x81 = mu * x80;
    const scalar_t x82 = POW2(x59 + x71);
    const scalar_t x83 = mu * x5;
    const scalar_t x84 = mu * x16;
    const scalar_t x85 = mu * x22;
    const scalar_t x86 = mu * x28;
    const scalar_t x87 = mu * x42;
    const scalar_t x88 = mu * x51;
    const scalar_t x89 = mu * x60;
    const scalar_t x90 = mu * x72;
    const scalar_t x91 = mu * x77;
    const scalar_t x92 = mu * x82;

    outx[0] += qw * (x11 * (x1 + x3 + x4 * x5));
    outx[1] += qw * (x17 * (x13 + x15 + x16 * x4));
    outx[2] += qw * (x23 * (x19 + x21 + x22 * x4));
    outx[3] += qw * (x29 * (x25 + x27 + x28 * x4));
    outx[4] += qw * (x43 * (x35 + x39 + x4 * x42));
    outx[5] += qw * (x43 * (x4 * x51 + x46 + x49));
    outx[6] += qw * (x43 * (x4 * x60 + x55 + x58));
    outx[7] += qw * (x43 * (x4 * x72 + x65 + x69));
    outx[8] += qw * (x43 * (x4 * x77 + x74 + x76));
    outx[9] += qw * (x43 * (x4 * x82 + x79 + x81));

    outy[0] += qw * (x11 * (x0 * x4 + x3 + x83));
    outy[1] += qw * (x17 * (x12 * x4 + x15 + x84));
    outy[2] += qw * (x23 * (x18 * x4 + x21 + x85));
    outy[3] += qw * (x29 * (x24 * x4 + x27 + x86));
    outy[4] += qw * (x43 * (x34 * x4 + x39 + x87));
    outy[5] += qw * (x43 * (x4 * x45 + x49 + x88));
    outy[6] += qw * (x43 * (x4 * x54 + x58 + x89));
    outy[7] += qw * (x43 * (x4 * x64 + x69 + x90));
    outy[8] += qw * (x43 * (x4 * x73 + x76 + x91));
    outy[9] += qw * (x43 * (x4 * x78 + x81 + x92));

    outz[0] += qw * (x11 * (x1 + x2 * x4 + x83));
    outz[1] += qw * (x17 * (x13 + x14 * x4 + x84));
    outz[2] += qw * (x23 * (x19 + x20 * x4 + x85));
    outz[3] += qw * (x29 * (x25 + x26 * x4 + x86));
    outz[4] += qw * (x43 * (x35 + x38 * x4 + x87));
    outz[5] += qw * (x43 * (x4 * x48 + x46 + x88));
    outz[6] += qw * (x43 * (x4 * x57 + x55 + x89));
    outz[7] += qw * (x43 * (x4 * x68 + x65 + x90));
    outz[8] += qw * (x43 * (x4 * x75 + x74 + x91));
    outz[9] += qw * (x43 * (x4 * x80 + x79 + x92));
}

// FIXME too many registers
static SFEM_INLINE void tet10_linear_elasticity_crs_adj(
        const scalar_t qx,
        const scalar_t qy,
        const scalar_t qz,
        const scalar_t qw,
        const scalar_t *const SFEM_RESTRICT adjugate,
        const scalar_t jacobian_determinant,
        const scalar_t mu,
        const scalar_t lambda,
        accumulator_t *const SFEM_RESTRICT element_matrix) {
    const real_t x0 = adjugate[1] + adjugate[4] + adjugate[7];
    const real_t x1 = mu*x0;
    const real_t x2 = adjugate[1]*x1;
    const real_t x3 = adjugate[2] + adjugate[5] + adjugate[8];
    const real_t x4 = mu*x3;
    const real_t x5 = adjugate[2]*x4;
    const real_t x6 = lambda + 2*mu;
    const real_t x7 = adjugate[0] + adjugate[3] + adjugate[6];
    const real_t x8 = x6*x7;
    const real_t x9 = adjugate[0]*x8 + x2 + x5;
    const real_t x10 = adjugate[4]*x1;
    const real_t x11 = adjugate[5]*x4;
    const real_t x12 = adjugate[3]*x8 + x10 + x11;
    const real_t x13 = adjugate[7]*x1;
    const real_t x14 = adjugate[8]*x4;
    const real_t x15 = adjugate[6]*x8 + x13 + x14;
    const real_t x16 = 4*qx;
    const real_t x17 = 4*qy;
    const real_t x18 = 4*qz;
    const real_t x19 = x16 + x17 + x18 - 3;
    const real_t x20 = qw/jacobian_determinant;
    const real_t x21 = (1.0/6.0)*x20;
    const real_t x22 = POW2(x19)*x21;
    const real_t x23 = POW2(adjugate[1]);
    const real_t x24 = mu*x23;
    const real_t x25 = POW2(adjugate[2]);
    const real_t x26 = mu*x25;
    const real_t x27 = POW2(adjugate[0]);
    const real_t x28 = x24 + x26 + x27*x6;
    const real_t x29 = adjugate[1]*mu;
    const real_t x30 = adjugate[4]*x29;
    const real_t x31 = adjugate[2]*mu;
    const real_t x32 = adjugate[5]*x31;
    const real_t x33 = adjugate[0]*x6;
    const real_t x34 = adjugate[3]*x33 + x30 + x32;
    const real_t x35 = adjugate[7]*x29;
    const real_t x36 = adjugate[8]*x31;
    const real_t x37 = adjugate[6]*x33 + x35 + x36;
    const real_t x38 = x16 - 1;
    const real_t x39 = x19*x21;
    const real_t x40 = x38*x39;
    const real_t x41 = POW2(adjugate[4]);
    const real_t x42 = mu*x41;
    const real_t x43 = POW2(adjugate[5]);
    const real_t x44 = mu*x43;
    const real_t x45 = POW2(adjugate[3]);
    const real_t x46 = x42 + x44 + x45*x6;
    const real_t x47 = adjugate[4]*mu;
    const real_t x48 = adjugate[7]*x47;
    const real_t x49 = adjugate[5]*mu;
    const real_t x50 = adjugate[8]*x49;
    const real_t x51 = adjugate[3]*x6;
    const real_t x52 = adjugate[6]*x51 + x48 + x50;
    const real_t x53 = x17 - 1;
    const real_t x54 = x39*x53;
    const real_t x55 = POW2(adjugate[7]);
    const real_t x56 = mu*x55;
    const real_t x57 = POW2(adjugate[8]);
    const real_t x58 = mu*x57;
    const real_t x59 = POW2(adjugate[6]);
    const real_t x60 = x56 + x58 + x59*x6;
    const real_t x61 = x18 - 1;
    const real_t x62 = x39*x61;
    const real_t x63 = adjugate[4]*qx;
    const real_t x64 = adjugate[7]*qx;
    const real_t x65 = qz - 1;
    const real_t x66 = 2*qx + qy + x65;
    const real_t x67 = adjugate[1]*x66;
    const real_t x68 = x63 + x64 + x67;
    const real_t x69 = x29*x68;
    const real_t x70 = adjugate[5]*qx;
    const real_t x71 = adjugate[8]*qx;
    const real_t x72 = adjugate[2]*x66 + x70 + x71;
    const real_t x73 = x31*x72;
    const real_t x74 = adjugate[3]*qx;
    const real_t x75 = adjugate[6]*qx;
    const real_t x76 = adjugate[0]*x66;
    const real_t x77 = x74 + x75 + x76;
    const real_t x78 = x33*x77 + x69 + x73;
    const real_t x79 = x47*x68;
    const real_t x80 = x49*x72;
    const real_t x81 = x51*x77 + x79 + x80;
    const real_t x82 = adjugate[7]*mu;
    const real_t x83 = x68*x82;
    const real_t x84 = adjugate[8]*mu;
    const real_t x85 = x72*x84;
    const real_t x86 = adjugate[6]*x6;
    const real_t x87 = x77*x86 + x83 + x85;
    const real_t x88 = (2.0/3.0)*x20;
    const real_t x89 = x19*x88;
    const real_t x90 = adjugate[1]*qy;
    const real_t x91 = x63 + x90;
    const real_t x92 = x29*x91;
    const real_t x93 = adjugate[2]*qy;
    const real_t x94 = x70 + x93;
    const real_t x95 = x31*x94;
    const real_t x96 = adjugate[0]*qy;
    const real_t x97 = x74 + x96;
    const real_t x98 = x33*x97 + x92 + x95;
    const real_t x99 = x47*x91;
    const real_t x100 = x49*x94;
    const real_t x101 = x100 + x51*x97 + x99;
    const real_t x102 = x82*x91;
    const real_t x103 = x84*x94;
    const real_t x104 = x102 + x103 + x86*x97;
    const real_t x105 = adjugate[7]*qy;
    const real_t x106 = qx + 2*qy + x65;
    const real_t x107 = adjugate[4]*x106;
    const real_t x108 = x105 + x107 + x90;
    const real_t x109 = x108*x29;
    const real_t x110 = adjugate[8]*qy;
    const real_t x111 = adjugate[5]*x106 + x110 + x93;
    const real_t x112 = x111*x31;
    const real_t x113 = adjugate[6]*qy;
    const real_t x114 = adjugate[3]*x106;
    const real_t x115 = x113 + x114 + x96;
    const real_t x116 = x109 + x112 + x115*x33;
    const real_t x117 = x108*x47;
    const real_t x118 = x111*x49;
    const real_t x119 = x115*x51 + x117 + x118;
    const real_t x120 = x108*x82;
    const real_t x121 = x111*x84;
    const real_t x122 = x115*x86 + x120 + x121;
    const real_t x123 = adjugate[1]*qz;
    const real_t x124 = adjugate[4]*qz;
    const real_t x125 = qx + qy + 2*qz - 1;
    const real_t x126 = adjugate[7]*x125;
    const real_t x127 = x123 + x124 + x126;
    const real_t x128 = x127*x29;
    const real_t x129 = adjugate[2]*qz;
    const real_t x130 = adjugate[5]*qz;
    const real_t x131 = adjugate[8]*x125 + x129 + x130;
    const real_t x132 = x131*x31;
    const real_t x133 = adjugate[0]*qz;
    const real_t x134 = adjugate[3]*qz;
    const real_t x135 = adjugate[6]*x125;
    const real_t x136 = x133 + x134 + x135;
    const real_t x137 = x128 + x132 + x136*x33;
    const real_t x138 = x127*x47;
    const real_t x139 = x131*x49;
    const real_t x140 = x136*x51 + x138 + x139;
    const real_t x141 = x127*x82;
    const real_t x142 = x131*x84;
    const real_t x143 = x136*x86 + x141 + x142;
    const real_t x144 = x123 + x64;
    const real_t x145 = x144*x29;
    const real_t x146 = x129 + x71;
    const real_t x147 = x146*x31;
    const real_t x148 = x133 + x75;
    const real_t x149 = x145 + x147 + x148*x33;
    const real_t x150 = x144*x47;
    const real_t x151 = x146*x49;
    const real_t x152 = x148*x51 + x150 + x151;
    const real_t x153 = x144*x82;
    const real_t x154 = x146*x84;
    const real_t x155 = x148*x86 + x153 + x154;
    const real_t x156 = x105 + x124;
    const real_t x157 = x156*x29;
    const real_t x158 = x110 + x130;
    const real_t x159 = x158*x31;
    const real_t x160 = x113 + x134;
    const real_t x161 = x157 + x159 + x160*x33;
    const real_t x162 = x156*x47;
    const real_t x163 = x158*x49;
    const real_t x164 = x160*x51 + x162 + x163;
    const real_t x165 = x156*x82;
    const real_t x166 = x158*x84;
    const real_t x167 = x160*x86 + x165 + x166;
    const real_t x168 = lambda*x0;
    const real_t x169 = adjugate[0]*x168 + x29*x7;
    const real_t x170 = adjugate[3]*x168 + x47*x7;
    const real_t x171 = adjugate[6]*x168 + x7*x82;
    const real_t x172 = lambda + mu;
    const real_t x173 = adjugate[0]*x172;
    const real_t x174 = adjugate[1]*x173;
    const real_t x175 = adjugate[1]*lambda;
    const real_t x176 = adjugate[0]*x47 + adjugate[3]*x175;
    const real_t x177 = adjugate[0]*x82 + adjugate[6]*x175;
    const real_t x178 = adjugate[3]*x172;
    const real_t x179 = adjugate[4]*x178;
    const real_t x180 = adjugate[4]*lambda;
    const real_t x181 = adjugate[0]*x180 + adjugate[3]*x29;
    const real_t x182 = adjugate[3]*x82 + adjugate[6]*x180;
    const real_t x183 = adjugate[6]*x172;
    const real_t x184 = adjugate[7]*x183;
    const real_t x185 = adjugate[7]*lambda;
    const real_t x186 = adjugate[0]*x185 + adjugate[6]*x29;
    const real_t x187 = adjugate[3]*x185 + adjugate[6]*x47;
    const real_t x188 = lambda*x68;
    const real_t x189 = adjugate[0]*x188 + x29*x77;
    const real_t x190 = adjugate[3]*x188 + x47*x77;
    const real_t x191 = adjugate[6]*x188 + x77*x82;
    const real_t x192 = lambda*x91;
    const real_t x193 = adjugate[0]*x192 + x29*x97;
    const real_t x194 = adjugate[3]*x192 + x47*x97;
    const real_t x195 = adjugate[6]*x192 + x82*x97;
    const real_t x196 = lambda*x108;
    const real_t x197 = adjugate[0]*x196 + x115*x29;
    const real_t x198 = adjugate[3]*x196 + x115*x47;
    const real_t x199 = adjugate[6]*x196 + x115*x82;
    const real_t x200 = lambda*x127;
    const real_t x201 = adjugate[0]*x200 + x136*x29;
    const real_t x202 = adjugate[3]*x200 + x136*x47;
    const real_t x203 = adjugate[6]*x200 + x136*x82;
    const real_t x204 = lambda*x144;
    const real_t x205 = adjugate[0]*x204 + x148*x29;
    const real_t x206 = adjugate[3]*x204 + x148*x47;
    const real_t x207 = adjugate[6]*x204 + x148*x82;
    const real_t x208 = lambda*x156;
    const real_t x209 = adjugate[0]*x208 + x160*x29;
    const real_t x210 = adjugate[3]*x208 + x160*x47;
    const real_t x211 = adjugate[6]*x208 + x160*x82;
    const real_t x212 = lambda*x3;
    const real_t x213 = adjugate[0]*x212 + x31*x7;
    const real_t x214 = adjugate[3]*x212 + x49*x7;
    const real_t x215 = adjugate[6]*x212 + x7*x84;
    const real_t x216 = adjugate[2]*x173;
    const real_t x217 = adjugate[2]*lambda;
    const real_t x218 = adjugate[0]*x49 + adjugate[3]*x217;
    const real_t x219 = adjugate[0]*x84 + adjugate[6]*x217;
    const real_t x220 = adjugate[5]*x178;
    const real_t x221 = adjugate[5]*lambda;
    const real_t x222 = adjugate[0]*x221 + adjugate[3]*x31;
    const real_t x223 = adjugate[3]*x84 + adjugate[6]*x221;
    const real_t x224 = adjugate[8]*x183;
    const real_t x225 = adjugate[8]*lambda;
    const real_t x226 = adjugate[0]*x225 + adjugate[6]*x31;
    const real_t x227 = adjugate[3]*x225 + adjugate[6]*x49;
    const real_t x228 = lambda*x72;
    const real_t x229 = adjugate[0]*x228 + x31*x77;
    const real_t x230 = adjugate[3]*x228 + x49*x77;
    const real_t x231 = adjugate[6]*x228 + x77*x84;
    const real_t x232 = lambda*x94;
    const real_t x233 = adjugate[0]*x232 + x31*x97;
    const real_t x234 = adjugate[3]*x232 + x49*x97;
    const real_t x235 = adjugate[6]*x232 + x84*x97;
    const real_t x236 = lambda*x111;
    const real_t x237 = adjugate[0]*x236 + x115*x31;
    const real_t x238 = adjugate[3]*x236 + x115*x49;
    const real_t x239 = adjugate[6]*x236 + x115*x84;
    const real_t x240 = lambda*x131;
    const real_t x241 = adjugate[0]*x240 + x136*x31;
    const real_t x242 = adjugate[3]*x240 + x136*x49;
    const real_t x243 = adjugate[6]*x240 + x136*x84;
    const real_t x244 = lambda*x146;
    const real_t x245 = adjugate[0]*x244 + x148*x31;
    const real_t x246 = adjugate[3]*x244 + x148*x49;
    const real_t x247 = adjugate[6]*x244 + x148*x84;
    const real_t x248 = lambda*x158;
    const real_t x249 = adjugate[0]*x248 + x160*x31;
    const real_t x250 = adjugate[3]*x248 + x160*x49;
    const real_t x251 = adjugate[6]*x248 + x160*x84;
    const real_t x252 = x21*POW2(x38);
    const real_t x253 = x21*x38;
    const real_t x254 = x253*x53;
    const real_t x255 = x254*x34;
    const real_t x256 = x253*x61;
    const real_t x257 = x256*x37;
    const real_t x258 = x38*x88;
    const real_t x259 = x174*x252;
    const real_t x260 = x181*x254;
    const real_t x261 = x186*x256;
    const real_t x262 = x216*x252;
    const real_t x263 = x222*x254;
    const real_t x264 = x226*x256;
    const real_t x265 = x21*POW2(x53);
    const real_t x266 = x21*x53*x61;
    const real_t x267 = x266*x52;
    const real_t x268 = x53*x88;
    const real_t x269 = x176*x254;
    const real_t x270 = x179*x265;
    const real_t x271 = x187*x266;
    const real_t x272 = x218*x254;
    const real_t x273 = x220*x265;
    const real_t x274 = x227*x266;
    const real_t x275 = x21*POW2(x61);
    const real_t x276 = x61*x88;
    const real_t x277 = x177*x256;
    const real_t x278 = x182*x266;
    const real_t x279 = x184*x275;
    const real_t x280 = x219*x256;
    const real_t x281 = x223*x266;
    const real_t x282 = x224*x275;
    const real_t x283 = qx*x12;
    const real_t x284 = qx*x15;
    const real_t x285 = qx*x34;
    const real_t x286 = qx*x37;
    const real_t x287 = qx*x52;
    const real_t x288 = qx*x46;
    const real_t x289 = qx*x60;
    const real_t x290 = qx*x81;
    const real_t x291 = qx*x87;
    const real_t x292 = (8.0/3.0)*x20;
    const real_t x293 = qx*x101;
    const real_t x294 = qx*x104;
    const real_t x295 = qx*x119;
    const real_t x296 = qx*x122;
    const real_t x297 = qx*x140;
    const real_t x298 = qx*x143;
    const real_t x299 = qx*x152;
    const real_t x300 = qx*x155;
    const real_t x301 = qx*x164;
    const real_t x302 = qx*x167;
    const real_t x303 = qx*x170;
    const real_t x304 = qx*x171;
    const real_t x305 = qx*x176;
    const real_t x306 = qx*x177;
    const real_t x307 = adjugate[1]*x172;
    const real_t x308 = x307*x76;
    const real_t x309 = adjugate[4]*x172;
    const real_t x310 = x309*x74;
    const real_t x311 = qx*x182;
    const real_t x312 = adjugate[7]*x172;
    const real_t x313 = x312*x75;
    const real_t x314 = qx*x187;
    const real_t x315 = qx*x190;
    const real_t x316 = qx*x191;
    const real_t x317 = qx*x194;
    const real_t x318 = qx*x195;
    const real_t x319 = qx*x198;
    const real_t x320 = qx*x199;
    const real_t x321 = qx*x202;
    const real_t x322 = qx*x203;
    const real_t x323 = qx*x206;
    const real_t x324 = qx*x207;
    const real_t x325 = qx*x210;
    const real_t x326 = qx*x211;
    const real_t x327 = qx*x214;
    const real_t x328 = qx*x215;
    const real_t x329 = qx*x218;
    const real_t x330 = qx*x219;
    const real_t x331 = adjugate[2]*x172;
    const real_t x332 = x331*x76;
    const real_t x333 = adjugate[5]*x172;
    const real_t x334 = x333*x74;
    const real_t x335 = qx*x223;
    const real_t x336 = adjugate[8]*x172;
    const real_t x337 = x336*x75;
    const real_t x338 = qx*x227;
    const real_t x339 = qx*x230;
    const real_t x340 = qx*x231;
    const real_t x341 = qx*x234;
    const real_t x342 = qx*x235;
    const real_t x343 = qx*x238;
    const real_t x344 = qx*x239;
    const real_t x345 = qx*x242;
    const real_t x346 = qx*x243;
    const real_t x347 = qx*x246;
    const real_t x348 = qx*x247;
    const real_t x349 = qx*x250;
    const real_t x350 = qx*x251;
    const real_t x351 = qy*x9;
    const real_t x352 = qy*x28;
    const real_t x353 = qy*x34;
    const real_t x354 = qy*x37;
    const real_t x355 = qy*x78;
    const real_t x356 = qy*x98;
    const real_t x357 = qy*x116;
    const real_t x358 = qy*x137;
    const real_t x359 = qy*x149;
    const real_t x360 = qy*x161;
    const real_t x361 = qy*x169;
    const real_t x362 = x307*x96;
    const real_t x363 = qy*x181;
    const real_t x364 = qy*x186;
    const real_t x365 = qy*x189;
    const real_t x366 = qy*x193;
    const real_t x367 = qy*x197;
    const real_t x368 = qy*x201;
    const real_t x369 = qy*x205;
    const real_t x370 = qy*x209;
    const real_t x371 = qy*x213;
    const real_t x372 = x331*x96;
    const real_t x373 = qy*x222;
    const real_t x374 = qy*x226;
    const real_t x375 = qy*x229;
    const real_t x376 = qy*x233;
    const real_t x377 = qy*x237;
    const real_t x378 = qy*x241;
    const real_t x379 = qy*x245;
    const real_t x380 = qy*x249;
    const real_t x381 = qy*x15;
    const real_t x382 = qy*x52;
    const real_t x383 = qy*x60;
    const real_t x384 = qy*x87;
    const real_t x385 = qy*x104;
    const real_t x386 = qy*x122;
    const real_t x387 = qy*x143;
    const real_t x388 = qy*x155;
    const real_t x389 = qy*x167;
    const real_t x390 = qy*x171;
    const real_t x391 = qy*x177;
    const real_t x392 = qy*x182;
    const real_t x393 = x114*x309;
    const real_t x394 = x113*x312;
    const real_t x395 = qy*x191;
    const real_t x396 = qy*x195;
    const real_t x397 = qy*x199;
    const real_t x398 = qy*x203;
    const real_t x399 = qy*x207;
    const real_t x400 = qy*x211;
    const real_t x401 = qy*x215;
    const real_t x402 = qy*x219;
    const real_t x403 = qy*x223;
    const real_t x404 = x114*x333;
    const real_t x405 = x113*x336;
    const real_t x406 = qy*x231;
    const real_t x407 = qy*x235;
    const real_t x408 = qy*x239;
    const real_t x409 = qy*x243;
    const real_t x410 = qy*x247;
    const real_t x411 = qy*x251;
    const real_t x412 = qz*x9;
    const real_t x413 = qz*x12;
    const real_t x414 = qz*x34;
    const real_t x415 = qz*x28;
    const real_t x416 = qz*x46;
    const real_t x417 = qz*x37;
    const real_t x418 = qz*x52;
    const real_t x419 = qz*x78;
    const real_t x420 = qz*x81;
    const real_t x421 = qz*x98;
    const real_t x422 = qz*x101;
    const real_t x423 = qz*x116;
    const real_t x424 = qz*x119;
    const real_t x425 = qz*x137;
    const real_t x426 = qz*x140;
    const real_t x427 = qz*x149;
    const real_t x428 = qz*x152;
    const real_t x429 = qz*x161;
    const real_t x430 = qz*x164;
    const real_t x431 = qz*x169;
    const real_t x432 = qz*x170;
    const real_t x433 = x133*x307;
    const real_t x434 = qz*x176;
    const real_t x435 = x134*x309;
    const real_t x436 = qz*x181;
    const real_t x437 = qz*x186;
    const real_t x438 = qz*x187;
    const real_t x439 = x135*x312;
    const real_t x440 = qz*x189;
    const real_t x441 = qz*x190;
    const real_t x442 = qz*x193;
    const real_t x443 = qz*x194;
    const real_t x444 = qz*x197;
    const real_t x445 = qz*x198;
    const real_t x446 = qz*x201;
    const real_t x447 = qz*x202;
    const real_t x448 = qz*x205;
    const real_t x449 = qz*x206;
    const real_t x450 = qz*x209;
    const real_t x451 = qz*x210;
    const real_t x452 = qz*x213;
    const real_t x453 = qz*x214;
    const real_t x454 = x133*x331;
    const real_t x455 = qz*x218;
    const real_t x456 = x134*x333;
    const real_t x457 = qz*x222;
    const real_t x458 = qz*x226;
    const real_t x459 = qz*x227;
    const real_t x460 = x135*x336;
    const real_t x461 = qz*x229;
    const real_t x462 = qz*x230;
    const real_t x463 = qz*x233;
    const real_t x464 = qz*x234;
    const real_t x465 = qz*x237;
    const real_t x466 = qz*x238;
    const real_t x467 = qz*x241;
    const real_t x468 = qz*x242;
    const real_t x469 = qz*x245;
    const real_t x470 = qz*x246;
    const real_t x471 = qz*x249;
    const real_t x472 = qz*x250;
    const real_t x473 = adjugate[0]*x1 + x175*x7;
    const real_t x474 = adjugate[3]*x1 + x180*x7;
    const real_t x475 = adjugate[6]*x1 + x185*x7;
    const real_t x476 = mu*x68;
    const real_t x477 = adjugate[0]*x476 + x175*x77;
    const real_t x478 = adjugate[3]*x476 + x180*x77;
    const real_t x479 = adjugate[6]*x476 + x185*x77;
    const real_t x480 = mu*x91;
    const real_t x481 = adjugate[0]*x480 + x175*x97;
    const real_t x482 = adjugate[3]*x480 + x180*x97;
    const real_t x483 = adjugate[6]*x480 + x185*x97;
    const real_t x484 = mu*x108;
    const real_t x485 = adjugate[0]*x484 + x115*x175;
    const real_t x486 = adjugate[3]*x484 + x115*x180;
    const real_t x487 = adjugate[6]*x484 + x115*x185;
    const real_t x488 = mu*x127;
    const real_t x489 = adjugate[0]*x488 + x136*x175;
    const real_t x490 = adjugate[3]*x488 + x136*x180;
    const real_t x491 = adjugate[6]*x488 + x136*x185;
    const real_t x492 = mu*x144;
    const real_t x493 = adjugate[0]*x492 + x148*x175;
    const real_t x494 = adjugate[3]*x492 + x148*x180;
    const real_t x495 = adjugate[6]*x492 + x148*x185;
    const real_t x496 = mu*x156;
    const real_t x497 = adjugate[0]*x496 + x160*x175;
    const real_t x498 = adjugate[3]*x496 + x160*x180;
    const real_t x499 = adjugate[6]*x496 + x160*x185;
    const real_t x500 = mu*x7;
    const real_t x501 = adjugate[0]*x500;
    const real_t x502 = x0*x6;
    const real_t x503 = adjugate[1]*x502 + x5 + x501;
    const real_t x504 = adjugate[3]*x500;
    const real_t x505 = adjugate[4]*x502 + x11 + x504;
    const real_t x506 = adjugate[6]*x500;
    const real_t x507 = adjugate[7]*x502 + x14 + x506;
    const real_t x508 = mu*x27;
    const real_t x509 = x23*x6 + x26 + x508;
    const real_t x510 = adjugate[0]*mu;
    const real_t x511 = adjugate[3]*x510;
    const real_t x512 = adjugate[1]*x6;
    const real_t x513 = adjugate[4]*x512 + x32 + x511;
    const real_t x514 = adjugate[6]*x510;
    const real_t x515 = adjugate[7]*x512 + x36 + x514;
    const real_t x516 = mu*x45;
    const real_t x517 = x41*x6 + x44 + x516;
    const real_t x518 = adjugate[3]*mu;
    const real_t x519 = adjugate[6]*x518;
    const real_t x520 = adjugate[4]*x6;
    const real_t x521 = adjugate[7]*x520 + x50 + x519;
    const real_t x522 = mu*x59;
    const real_t x523 = x522 + x55*x6 + x58;
    const real_t x524 = x510*x77;
    const real_t x525 = x512*x68 + x524 + x73;
    const real_t x526 = x518*x77;
    const real_t x527 = x520*x68 + x526 + x80;
    const real_t x528 = adjugate[6]*mu;
    const real_t x529 = x528*x77;
    const real_t x530 = adjugate[7]*x6;
    const real_t x531 = x529 + x530*x68 + x85;
    const real_t x532 = x510*x97;
    const real_t x533 = x512*x91 + x532 + x95;
    const real_t x534 = x518*x97;
    const real_t x535 = x100 + x520*x91 + x534;
    const real_t x536 = x528*x97;
    const real_t x537 = x103 + x530*x91 + x536;
    const real_t x538 = x115*x510;
    const real_t x539 = x108*x512 + x112 + x538;
    const real_t x540 = x115*x518;
    const real_t x541 = x108*x520 + x118 + x540;
    const real_t x542 = x115*x528;
    const real_t x543 = x108*x530 + x121 + x542;
    const real_t x544 = x136*x510;
    const real_t x545 = x127*x512 + x132 + x544;
    const real_t x546 = x136*x518;
    const real_t x547 = x127*x520 + x139 + x546;
    const real_t x548 = x136*x528;
    const real_t x549 = x127*x530 + x142 + x548;
    const real_t x550 = x148*x510;
    const real_t x551 = x144*x512 + x147 + x550;
    const real_t x552 = x148*x518;
    const real_t x553 = x144*x520 + x151 + x552;
    const real_t x554 = x148*x528;
    const real_t x555 = x144*x530 + x154 + x554;
    const real_t x556 = x160*x510;
    const real_t x557 = x156*x512 + x159 + x556;
    const real_t x558 = x160*x518;
    const real_t x559 = x156*x520 + x163 + x558;
    const real_t x560 = x160*x528;
    const real_t x561 = x156*x530 + x166 + x560;
    const real_t x562 = adjugate[2]*x1 + x175*x3;
    const real_t x563 = adjugate[5]*x1 + x180*x3;
    const real_t x564 = adjugate[8]*x1 + x185*x3;
    const real_t x565 = adjugate[2]*x307;
    const real_t x566 = adjugate[2]*x180 + adjugate[5]*x29;
    const real_t x567 = adjugate[2]*x185 + adjugate[8]*x29;
    const real_t x568 = adjugate[5]*x309;
    const real_t x569 = adjugate[4]*x31 + adjugate[5]*x175;
    const real_t x570 = adjugate[5]*x185 + adjugate[8]*x47;
    const real_t x571 = adjugate[8]*x312;
    const real_t x572 = adjugate[7]*x31 + adjugate[8]*x175;
    const real_t x573 = adjugate[7]*x49 + adjugate[8]*x180;
    const real_t x574 = x175*x72 + x31*x68;
    const real_t x575 = x180*x72 + x49*x68;
    const real_t x576 = x185*x72 + x68*x84;
    const real_t x577 = x175*x94 + x31*x91;
    const real_t x578 = x180*x94 + x49*x91;
    const real_t x579 = x185*x94 + x84*x91;
    const real_t x580 = x108*x31 + x111*x175;
    const real_t x581 = x108*x49 + x111*x180;
    const real_t x582 = x108*x84 + x111*x185;
    const real_t x583 = x127*x31 + x131*x175;
    const real_t x584 = x127*x49 + x131*x180;
    const real_t x585 = x127*x84 + x131*x185;
    const real_t x586 = x144*x31 + x146*x175;
    const real_t x587 = x144*x49 + x146*x180;
    const real_t x588 = x144*x84 + x146*x185;
    const real_t x589 = x156*x31 + x158*x175;
    const real_t x590 = x156*x49 + x158*x180;
    const real_t x591 = x156*x84 + x158*x185;
    const real_t x592 = x254*x513;
    const real_t x593 = x256*x515;
    const real_t x594 = x252*x565;
    const real_t x595 = x254*x569;
    const real_t x596 = x256*x572;
    const real_t x597 = x266*x521;
    const real_t x598 = x254*x566;
    const real_t x599 = x265*x568;
    const real_t x600 = x266*x573;
    const real_t x601 = x256*x567;
    const real_t x602 = x266*x570;
    const real_t x603 = x275*x571;
    const real_t x604 = qx*x474;
    const real_t x605 = qx*x475;
    const real_t x606 = qx*x181;
    const real_t x607 = qx*x186;
    const real_t x608 = qx*x478;
    const real_t x609 = qx*x479;
    const real_t x610 = qx*x482;
    const real_t x611 = qx*x483;
    const real_t x612 = qx*x486;
    const real_t x613 = qx*x487;
    const real_t x614 = qx*x490;
    const real_t x615 = qx*x491;
    const real_t x616 = qx*x494;
    const real_t x617 = qx*x495;
    const real_t x618 = qx*x498;
    const real_t x619 = qx*x499;
    const real_t x620 = qx*x505;
    const real_t x621 = qx*x507;
    const real_t x622 = qx*x513;
    const real_t x623 = qx*x515;
    const real_t x624 = qx*x521;
    const real_t x625 = qx*x517;
    const real_t x626 = qx*x523;
    const real_t x627 = qx*x527;
    const real_t x628 = qx*x531;
    const real_t x629 = qx*x535;
    const real_t x630 = qx*x537;
    const real_t x631 = qx*x541;
    const real_t x632 = qx*x543;
    const real_t x633 = qx*x547;
    const real_t x634 = qx*x549;
    const real_t x635 = qx*x553;
    const real_t x636 = qx*x555;
    const real_t x637 = qx*x559;
    const real_t x638 = qx*x561;
    const real_t x639 = qx*x563;
    const real_t x640 = qx*x564;
    const real_t x641 = qx*x566;
    const real_t x642 = qx*x567;
    const real_t x643 = x331*x67;
    const real_t x644 = x333*x63;
    const real_t x645 = qx*x570;
    const real_t x646 = x336*x64;
    const real_t x647 = qx*x573;
    const real_t x648 = qx*x575;
    const real_t x649 = qx*x576;
    const real_t x650 = qx*x578;
    const real_t x651 = qx*x579;
    const real_t x652 = qx*x581;
    const real_t x653 = qx*x582;
    const real_t x654 = qx*x584;
    const real_t x655 = qx*x585;
    const real_t x656 = qx*x587;
    const real_t x657 = qx*x588;
    const real_t x658 = qx*x590;
    const real_t x659 = qx*x591;
    const real_t x660 = qy*x473;
    const real_t x661 = qy*x176;
    const real_t x662 = qy*x477;
    const real_t x663 = qy*x481;
    const real_t x664 = qy*x485;
    const real_t x665 = qy*x489;
    const real_t x666 = qy*x493;
    const real_t x667 = qy*x497;
    const real_t x668 = qy*x503;
    const real_t x669 = qy*x509;
    const real_t x670 = qy*x513;
    const real_t x671 = qy*x515;
    const real_t x672 = qy*x525;
    const real_t x673 = qy*x533;
    const real_t x674 = qy*x539;
    const real_t x675 = qy*x545;
    const real_t x676 = qy*x551;
    const real_t x677 = qy*x557;
    const real_t x678 = qy*x562;
    const real_t x679 = x331*x90;
    const real_t x680 = qy*x569;
    const real_t x681 = qy*x572;
    const real_t x682 = qy*x574;
    const real_t x683 = qy*x577;
    const real_t x684 = qy*x580;
    const real_t x685 = qy*x583;
    const real_t x686 = qy*x586;
    const real_t x687 = qy*x589;
    const real_t x688 = qy*x475;
    const real_t x689 = qy*x187;
    const real_t x690 = qy*x479;
    const real_t x691 = qy*x483;
    const real_t x692 = qy*x487;
    const real_t x693 = qy*x491;
    const real_t x694 = qy*x495;
    const real_t x695 = qy*x499;
    const real_t x696 = qy*x507;
    const real_t x697 = qy*x521;
    const real_t x698 = qy*x523;
    const real_t x699 = qy*x531;
    const real_t x700 = qy*x537;
    const real_t x701 = qy*x543;
    const real_t x702 = qy*x549;
    const real_t x703 = qy*x555;
    const real_t x704 = qy*x561;
    const real_t x705 = qy*x564;
    const real_t x706 = qy*x567;
    const real_t x707 = qy*x570;
    const real_t x708 = x107*x333;
    const real_t x709 = x105*x336;
    const real_t x710 = qy*x576;
    const real_t x711 = qy*x579;
    const real_t x712 = qy*x582;
    const real_t x713 = qy*x585;
    const real_t x714 = qy*x588;
    const real_t x715 = qy*x591;
    const real_t x716 = qz*x473;
    const real_t x717 = qz*x474;
    const real_t x718 = qz*x177;
    const real_t x719 = qz*x182;
    const real_t x720 = qz*x477;
    const real_t x721 = qz*x478;
    const real_t x722 = qz*x481;
    const real_t x723 = qz*x482;
    const real_t x724 = qz*x485;
    const real_t x725 = qz*x486;
    const real_t x726 = qz*x489;
    const real_t x727 = qz*x490;
    const real_t x728 = qz*x493;
    const real_t x729 = qz*x494;
    const real_t x730 = qz*x497;
    const real_t x731 = qz*x498;
    const real_t x732 = qz*x503;
    const real_t x733 = qz*x505;
    const real_t x734 = qz*x513;
    const real_t x735 = qz*x509;
    const real_t x736 = qz*x517;
    const real_t x737 = qz*x515;
    const real_t x738 = qz*x521;
    const real_t x739 = qz*x525;
    const real_t x740 = qz*x527;
    const real_t x741 = qz*x533;
    const real_t x742 = qz*x535;
    const real_t x743 = qz*x539;
    const real_t x744 = qz*x541;
    const real_t x745 = qz*x545;
    const real_t x746 = qz*x547;
    const real_t x747 = qz*x551;
    const real_t x748 = qz*x553;
    const real_t x749 = qz*x557;
    const real_t x750 = qz*x559;
    const real_t x751 = qz*x562;
    const real_t x752 = qz*x563;
    const real_t x753 = x123*x331;
    const real_t x754 = qz*x566;
    const real_t x755 = x124*x333;
    const real_t x756 = qz*x569;
    const real_t x757 = qz*x572;
    const real_t x758 = qz*x573;
    const real_t x759 = x126*x336;
    const real_t x760 = qz*x574;
    const real_t x761 = qz*x575;
    const real_t x762 = qz*x577;
    const real_t x763 = qz*x578;
    const real_t x764 = qz*x580;
    const real_t x765 = qz*x581;
    const real_t x766 = qz*x583;
    const real_t x767 = qz*x584;
    const real_t x768 = qz*x586;
    const real_t x769 = qz*x587;
    const real_t x770 = qz*x589;
    const real_t x771 = qz*x590;
    const real_t x772 = adjugate[0]*x4 + x217*x7;
    const real_t x773 = adjugate[3]*x4 + x221*x7;
    const real_t x774 = adjugate[6]*x4 + x225*x7;
    const real_t x775 = x217*x77 + x510*x72;
    const real_t x776 = x221*x77 + x518*x72;
    const real_t x777 = x225*x77 + x528*x72;
    const real_t x778 = x217*x97 + x510*x94;
    const real_t x779 = x221*x97 + x518*x94;
    const real_t x780 = x225*x97 + x528*x94;
    const real_t x781 = x111*x510 + x115*x217;
    const real_t x782 = x111*x518 + x115*x221;
    const real_t x783 = x111*x528 + x115*x225;
    const real_t x784 = x131*x510 + x136*x217;
    const real_t x785 = x131*x518 + x136*x221;
    const real_t x786 = x131*x528 + x136*x225;
    const real_t x787 = x146*x510 + x148*x217;
    const real_t x788 = x146*x518 + x148*x221;
    const real_t x789 = x146*x528 + x148*x225;
    const real_t x790 = x158*x510 + x160*x217;
    const real_t x791 = x158*x518 + x160*x221;
    const real_t x792 = x158*x528 + x160*x225;
    const real_t x793 = adjugate[1]*x4 + adjugate[2]*x168;
    const real_t x794 = adjugate[4]*x4 + adjugate[5]*x168;
    const real_t x795 = adjugate[7]*x4 + adjugate[8]*x168;
    const real_t x796 = adjugate[2]*x188 + x29*x72;
    const real_t x797 = adjugate[5]*x188 + x47*x72;
    const real_t x798 = adjugate[8]*x188 + x72*x82;
    const real_t x799 = adjugate[2]*x192 + x29*x94;
    const real_t x800 = adjugate[5]*x192 + x47*x94;
    const real_t x801 = adjugate[8]*x192 + x82*x94;
    const real_t x802 = adjugate[2]*x196 + x111*x29;
    const real_t x803 = adjugate[5]*x196 + x111*x47;
    const real_t x804 = adjugate[8]*x196 + x111*x82;
    const real_t x805 = adjugate[2]*x200 + x131*x29;
    const real_t x806 = adjugate[5]*x200 + x131*x47;
    const real_t x807 = adjugate[8]*x200 + x131*x82;
    const real_t x808 = adjugate[2]*x204 + x146*x29;
    const real_t x809 = adjugate[5]*x204 + x146*x47;
    const real_t x810 = adjugate[8]*x204 + x146*x82;
    const real_t x811 = adjugate[2]*x208 + x158*x29;
    const real_t x812 = adjugate[5]*x208 + x158*x47;
    const real_t x813 = adjugate[8]*x208 + x158*x82;
    const real_t x814 = x3*x6;
    const real_t x815 = adjugate[2]*x814 + x2 + x501;
    const real_t x816 = adjugate[5]*x814 + x10 + x504;
    const real_t x817 = adjugate[8]*x814 + x13 + x506;
    const real_t x818 = x24 + x25*x6 + x508;
    const real_t x819 = adjugate[2]*x6;
    const real_t x820 = adjugate[5]*x819 + x30 + x511;
    const real_t x821 = adjugate[8]*x819 + x35 + x514;
    const real_t x822 = x42 + x43*x6 + x516;
    const real_t x823 = adjugate[5]*x6;
    const real_t x824 = adjugate[8]*x823 + x48 + x519;
    const real_t x825 = x522 + x56 + x57*x6;
    const real_t x826 = x524 + x69 + x72*x819;
    const real_t x827 = x526 + x72*x823 + x79;
    const real_t x828 = adjugate[8]*x6;
    const real_t x829 = x529 + x72*x828 + x83;
    const real_t x830 = x532 + x819*x94 + x92;
    const real_t x831 = x534 + x823*x94 + x99;
    const real_t x832 = x102 + x536 + x828*x94;
    const real_t x833 = x109 + x111*x819 + x538;
    const real_t x834 = x111*x823 + x117 + x540;
    const real_t x835 = x111*x828 + x120 + x542;
    const real_t x836 = x128 + x131*x819 + x544;
    const real_t x837 = x131*x823 + x138 + x546;
    const real_t x838 = x131*x828 + x141 + x548;
    const real_t x839 = x145 + x146*x819 + x550;
    const real_t x840 = x146*x823 + x150 + x552;
    const real_t x841 = x146*x828 + x153 + x554;
    const real_t x842 = x157 + x158*x819 + x556;
    const real_t x843 = x158*x823 + x162 + x558;
    const real_t x844 = x158*x828 + x165 + x560;
    const real_t x845 = x254*x820;
    const real_t x846 = x256*x821;
    const real_t x847 = x266*x824;
    const real_t x848 = qx*x773;
    const real_t x849 = qx*x774;
    const real_t x850 = qx*x222;
    const real_t x851 = qx*x226;
    const real_t x852 = qx*x776;
    const real_t x853 = qx*x777;
    const real_t x854 = qx*x779;
    const real_t x855 = qx*x780;
    const real_t x856 = qx*x782;
    const real_t x857 = qx*x783;
    const real_t x858 = qx*x785;
    const real_t x859 = qx*x786;
    const real_t x860 = qx*x788;
    const real_t x861 = qx*x789;
    const real_t x862 = qx*x791;
    const real_t x863 = qx*x792;
    const real_t x864 = qx*x794;
    const real_t x865 = qx*x795;
    const real_t x866 = qx*x569;
    const real_t x867 = qx*x572;
    const real_t x868 = qx*x797;
    const real_t x869 = qx*x798;
    const real_t x870 = qx*x800;
    const real_t x871 = qx*x801;
    const real_t x872 = qx*x803;
    const real_t x873 = qx*x804;
    const real_t x874 = qx*x806;
    const real_t x875 = qx*x807;
    const real_t x876 = qx*x809;
    const real_t x877 = qx*x810;
    const real_t x878 = qx*x812;
    const real_t x879 = qx*x813;
    const real_t x880 = qx*x816;
    const real_t x881 = qx*x817;
    const real_t x882 = qx*x820;
    const real_t x883 = qx*x821;
    const real_t x884 = qx*x824;
    const real_t x885 = qx*x822;
    const real_t x886 = qx*x825;
    const real_t x887 = qx*x827;
    const real_t x888 = qx*x829;
    const real_t x889 = qx*x831;
    const real_t x890 = qx*x832;
    const real_t x891 = qx*x834;
    const real_t x892 = qx*x835;
    const real_t x893 = qx*x837;
    const real_t x894 = qx*x838;
    const real_t x895 = qx*x840;
    const real_t x896 = qx*x841;
    const real_t x897 = qx*x843;
    const real_t x898 = qx*x844;
    const real_t x899 = qy*x772;
    const real_t x900 = qy*x218;
    const real_t x901 = qy*x775;
    const real_t x902 = qy*x778;
    const real_t x903 = qy*x781;
    const real_t x904 = qy*x784;
    const real_t x905 = qy*x787;
    const real_t x906 = qy*x790;
    const real_t x907 = qy*x793;
    const real_t x908 = qy*x566;
    const real_t x909 = qy*x796;
    const real_t x910 = qy*x799;
    const real_t x911 = qy*x802;
    const real_t x912 = qy*x805;
    const real_t x913 = qy*x808;
    const real_t x914 = qy*x811;
    const real_t x915 = qy*x815;
    const real_t x916 = qy*x818;
    const real_t x917 = qy*x820;
    const real_t x918 = qy*x821;
    const real_t x919 = qy*x826;
    const real_t x920 = qy*x830;
    const real_t x921 = qy*x833;
    const real_t x922 = qy*x836;
    const real_t x923 = qy*x839;
    const real_t x924 = qy*x842;
    const real_t x925 = qy*x774;
    const real_t x926 = qy*x227;
    const real_t x927 = qy*x777;
    const real_t x928 = qy*x780;
    const real_t x929 = qy*x783;
    const real_t x930 = qy*x786;
    const real_t x931 = qy*x789;
    const real_t x932 = qy*x792;
    const real_t x933 = qy*x795;
    const real_t x934 = qy*x573;
    const real_t x935 = qy*x798;
    const real_t x936 = qy*x801;
    const real_t x937 = qy*x804;
    const real_t x938 = qy*x807;
    const real_t x939 = qy*x810;
    const real_t x940 = qy*x813;
    const real_t x941 = qy*x817;
    const real_t x942 = qy*x824;
    const real_t x943 = qy*x825;
    const real_t x944 = qy*x829;
    const real_t x945 = qy*x832;
    const real_t x946 = qy*x835;
    const real_t x947 = qy*x838;
    const real_t x948 = qy*x841;
    const real_t x949 = qy*x844;
    const real_t x950 = qz*x772;
    const real_t x951 = qz*x773;
    const real_t x952 = qz*x219;
    const real_t x953 = qz*x223;
    const real_t x954 = qz*x775;
    const real_t x955 = qz*x776;
    const real_t x956 = qz*x778;
    const real_t x957 = qz*x779;
    const real_t x958 = qz*x781;
    const real_t x959 = qz*x782;
    const real_t x960 = qz*x784;
    const real_t x961 = qz*x785;
    const real_t x962 = qz*x787;
    const real_t x963 = qz*x788;
    const real_t x964 = qz*x790;
    const real_t x965 = qz*x791;
    const real_t x966 = qz*x793;
    const real_t x967 = qz*x794;
    const real_t x968 = qz*x567;
    const real_t x969 = qz*x570;
    const real_t x970 = qz*x796;
    const real_t x971 = qz*x797;
    const real_t x972 = qz*x799;
    const real_t x973 = qz*x800;
    const real_t x974 = qz*x802;
    const real_t x975 = qz*x803;
    const real_t x976 = qz*x805;
    const real_t x977 = qz*x806;
    const real_t x978 = qz*x808;
    const real_t x979 = qz*x809;
    const real_t x980 = qz*x811;
    const real_t x981 = qz*x812;
    const real_t x982 = qz*x815;
    const real_t x983 = qz*x816;
    const real_t x984 = qz*x820;
    const real_t x985 = qz*x818;
    const real_t x986 = qz*x822;
    const real_t x987 = qz*x821;
    const real_t x988 = qz*x824;
    const real_t x989 = qz*x826;
    const real_t x990 = qz*x827;
    const real_t x991 = qz*x830;
    const real_t x992 = qz*x831;
    const real_t x993 = qz*x833;
    const real_t x994 = qz*x834;
    const real_t x995 = qz*x836;
    const real_t x996 = qz*x837;
    const real_t x997 = qz*x839;
    const real_t x998 = qz*x840;
    const real_t x999 = qz*x842;
    const real_t x1000 = qz*x843;
    element_matrix[0] += x22*(x12 + x15 + x9);
    element_matrix[1] += x40*(x28 + x34 + x37);
    element_matrix[2] += x54*(x34 + x46 + x52);
    element_matrix[3] += x62*(x37 + x52 + x60);
    element_matrix[4] += x89*(-x78 - x81 - x87);
    element_matrix[5] += x89*(x101 + x104 + x98);
    element_matrix[6] += x89*(-x116 - x119 - x122);
    element_matrix[7] += x89*(-x137 - x140 - x143);
    element_matrix[8] += x89*(x149 + x152 + x155);
    element_matrix[9] += x89*(x161 + x164 + x167);
    element_matrix[10] += x22*(x169 + x170 + x171);
    element_matrix[11] += x40*(x174 + x176 + x177);
    element_matrix[12] += x54*(x179 + x181 + x182);
    element_matrix[13] += x62*(x184 + x186 + x187);
    element_matrix[14] += x89*(-x189 - x190 - x191);
    element_matrix[15] += x89*(x193 + x194 + x195);
    element_matrix[16] += x89*(-x197 - x198 - x199);
    element_matrix[17] += x89*(-x201 - x202 - x203);
    element_matrix[18] += x89*(x205 + x206 + x207);
    element_matrix[19] += x89*(x209 + x210 + x211);
    element_matrix[20] += x22*(x213 + x214 + x215);
    element_matrix[21] += x40*(x216 + x218 + x219);
    element_matrix[22] += x54*(x220 + x222 + x223);
    element_matrix[23] += x62*(x224 + x226 + x227);
    element_matrix[24] += x89*(-x229 - x230 - x231);
    element_matrix[25] += x89*(x233 + x234 + x235);
    element_matrix[26] += x89*(-x237 - x238 - x239);
    element_matrix[27] += x89*(-x241 - x242 - x243);
    element_matrix[28] += x89*(x245 + x246 + x247);
    element_matrix[29] += x89*(x249 + x250 + x251);
    element_matrix[30] += x40*x9;
    element_matrix[31] += x252*x28;
    element_matrix[32] += x255;
    element_matrix[33] += x257;
    element_matrix[34] += -x258*x78;
    element_matrix[35] += x258*x98;
    element_matrix[36] += -x116*x258;
    element_matrix[37] += -x137*x258;
    element_matrix[38] += x149*x258;
    element_matrix[39] += x161*x258;
    element_matrix[40] += x169*x40;
    element_matrix[41] += x259;
    element_matrix[42] += x260;
    element_matrix[43] += x261;
    element_matrix[44] += -x189*x258;
    element_matrix[45] += x193*x258;
    element_matrix[46] += -x197*x258;
    element_matrix[47] += -x201*x258;
    element_matrix[48] += x205*x258;
    element_matrix[49] += x209*x258;
    element_matrix[50] += x213*x40;
    element_matrix[51] += x262;
    element_matrix[52] += x263;
    element_matrix[53] += x264;
    element_matrix[54] += -x229*x258;
    element_matrix[55] += x233*x258;
    element_matrix[56] += -x237*x258;
    element_matrix[57] += -x241*x258;
    element_matrix[58] += x245*x258;
    element_matrix[59] += x249*x258;
    element_matrix[60] += x12*x54;
    element_matrix[61] += x255;
    element_matrix[62] += x265*x46;
    element_matrix[63] += x267;
    element_matrix[64] += -x268*x81;
    element_matrix[65] += x101*x268;
    element_matrix[66] += -x119*x268;
    element_matrix[67] += -x140*x268;
    element_matrix[68] += x152*x268;
    element_matrix[69] += x164*x268;
    element_matrix[70] += x170*x54;
    element_matrix[71] += x269;
    element_matrix[72] += x270;
    element_matrix[73] += x271;
    element_matrix[74] += -x190*x268;
    element_matrix[75] += x194*x268;
    element_matrix[76] += -x198*x268;
    element_matrix[77] += -x202*x268;
    element_matrix[78] += x206*x268;
    element_matrix[79] += x210*x268;
    element_matrix[80] += x214*x54;
    element_matrix[81] += x272;
    element_matrix[82] += x273;
    element_matrix[83] += x274;
    element_matrix[84] += -x230*x268;
    element_matrix[85] += x234*x268;
    element_matrix[86] += -x238*x268;
    element_matrix[87] += -x242*x268;
    element_matrix[88] += x246*x268;
    element_matrix[89] += x250*x268;
    element_matrix[90] += x15*x62;
    element_matrix[91] += x257;
    element_matrix[92] += x267;
    element_matrix[93] += x275*x60;
    element_matrix[94] += -x276*x87;
    element_matrix[95] += x104*x276;
    element_matrix[96] += -x122*x276;
    element_matrix[97] += -x143*x276;
    element_matrix[98] += x155*x276;
    element_matrix[99] += x167*x276;
    element_matrix[100] += x171*x62;
    element_matrix[101] += x277;
    element_matrix[102] += x278;
    element_matrix[103] += x279;
    element_matrix[104] += -x191*x276;
    element_matrix[105] += x195*x276;
    element_matrix[106] += -x199*x276;
    element_matrix[107] += -x203*x276;
    element_matrix[108] += x207*x276;
    element_matrix[109] += x211*x276;
    element_matrix[110] += x215*x62;
    element_matrix[111] += x280;
    element_matrix[112] += x281;
    element_matrix[113] += x282;
    element_matrix[114] += -x231*x276;
    element_matrix[115] += x235*x276;
    element_matrix[116] += -x239*x276;
    element_matrix[117] += -x243*x276;
    element_matrix[118] += x247*x276;
    element_matrix[119] += x251*x276;
    element_matrix[120] += x89*(-x283 - x284 - x66*x9);
    element_matrix[121] += x258*(-x28*x66 - x285 - x286);
    element_matrix[122] += x268*(-x287 - x288 - x34*x66);
    element_matrix[123] += x276*(-x287 - x289 - x37*x66);
    element_matrix[124] += x292*(x290 + x291 + x66*x78);
    element_matrix[125] += x292*(-x293 - x294 - x66*x98);
    element_matrix[126] += x292*(x116*x66 + x295 + x296);
    element_matrix[127] += x292*(x137*x66 + x297 + x298);
    element_matrix[128] += x292*(-x149*x66 - x299 - x300);
    element_matrix[129] += x292*(-x161*x66 - x301 - x302);
    element_matrix[130] += x89*(-x169*x66 - x303 - x304);
    element_matrix[131] += x258*(-x305 - x306 - x308);
    element_matrix[132] += x268*(-x181*x66 - x310 - x311);
    element_matrix[133] += x276*(-x186*x66 - x313 - x314);
    element_matrix[134] += x292*(x189*x66 + x315 + x316);
    element_matrix[135] += x292*(-x193*x66 - x317 - x318);
    element_matrix[136] += x292*(x197*x66 + x319 + x320);
    element_matrix[137] += x292*(x201*x66 + x321 + x322);
    element_matrix[138] += x292*(-x205*x66 - x323 - x324);
    element_matrix[139] += x292*(-x209*x66 - x325 - x326);
    element_matrix[140] += x89*(-x213*x66 - x327 - x328);
    element_matrix[141] += x258*(-x329 - x330 - x332);
    element_matrix[142] += x268*(-x222*x66 - x334 - x335);
    element_matrix[143] += x276*(-x226*x66 - x337 - x338);
    element_matrix[144] += x292*(x229*x66 + x339 + x340);
    element_matrix[145] += x292*(-x233*x66 - x341 - x342);
    element_matrix[146] += x292*(x237*x66 + x343 + x344);
    element_matrix[147] += x292*(x241*x66 + x345 + x346);
    element_matrix[148] += x292*(-x245*x66 - x347 - x348);
    element_matrix[149] += x292*(-x249*x66 - x349 - x350);
    element_matrix[150] += x89*(x283 + x351);
    element_matrix[151] += x258*(x285 + x352);
    element_matrix[152] += x268*(x288 + x353);
    element_matrix[153] += x276*(x287 + x354);
    element_matrix[154] += x292*(-x290 - x355);
    element_matrix[155] += x292*(x293 + x356);
    element_matrix[156] += x292*(-x295 - x357);
    element_matrix[157] += x292*(-x297 - x358);
    element_matrix[158] += x292*(x299 + x359);
    element_matrix[159] += x292*(x301 + x360);
    element_matrix[160] += x89*(x303 + x361);
    element_matrix[161] += x258*(x305 + x362);
    element_matrix[162] += x268*(x310 + x363);
    element_matrix[163] += x276*(x314 + x364);
    element_matrix[164] += x292*(-x315 - x365);
    element_matrix[165] += x292*(x317 + x366);
    element_matrix[166] += x292*(-x319 - x367);
    element_matrix[167] += x292*(-x321 - x368);
    element_matrix[168] += x292*(x323 + x369);
    element_matrix[169] += x292*(x325 + x370);
    element_matrix[170] += x89*(x327 + x371);
    element_matrix[171] += x258*(x329 + x372);
    element_matrix[172] += x268*(x334 + x373);
    element_matrix[173] += x276*(x338 + x374);
    element_matrix[174] += x292*(-x339 - x375);
    element_matrix[175] += x292*(x341 + x376);
    element_matrix[176] += x292*(-x343 - x377);
    element_matrix[177] += x292*(-x345 - x378);
    element_matrix[178] += x292*(x347 + x379);
    element_matrix[179] += x292*(x349 + x380);
    element_matrix[180] += x89*(-x106*x12 - x351 - x381);
    element_matrix[181] += x258*(-x106*x34 - x352 - x354);
    element_matrix[182] += x268*(-x106*x46 - x353 - x382);
    element_matrix[183] += x276*(-x106*x52 - x354 - x383);
    element_matrix[184] += x292*(x106*x81 + x355 + x384);
    element_matrix[185] += x292*(-x101*x106 - x356 - x385);
    element_matrix[186] += x292*(x106*x119 + x357 + x386);
    element_matrix[187] += x292*(x106*x140 + x358 + x387);
    element_matrix[188] += x292*(-x106*x152 - x359 - x388);
    element_matrix[189] += x292*(-x106*x164 - x360 - x389);
    element_matrix[190] += x89*(-x106*x170 - x361 - x390);
    element_matrix[191] += x258*(-x106*x176 - x362 - x391);
    element_matrix[192] += x268*(-x363 - x392 - x393);
    element_matrix[193] += x276*(-x106*x187 - x364 - x394);
    element_matrix[194] += x292*(x106*x190 + x365 + x395);
    element_matrix[195] += x292*(-x106*x194 - x366 - x396);
    element_matrix[196] += x292*(x106*x198 + x367 + x397);
    element_matrix[197] += x292*(x106*x202 + x368 + x398);
    element_matrix[198] += x292*(-x106*x206 - x369 - x399);
    element_matrix[199] += x292*(-x106*x210 - x370 - x400);
    element_matrix[200] += x89*(-x106*x214 - x371 - x401);
    element_matrix[201] += x258*(-x106*x218 - x372 - x402);
    element_matrix[202] += x268*(-x373 - x403 - x404);
    element_matrix[203] += x276*(-x106*x227 - x374 - x405);
    element_matrix[204] += x292*(x106*x230 + x375 + x406);
    element_matrix[205] += x292*(-x106*x234 - x376 - x407);
    element_matrix[206] += x292*(x106*x238 + x377 + x408);
    element_matrix[207] += x292*(x106*x242 + x378 + x409);
    element_matrix[208] += x292*(-x106*x246 - x379 - x410);
    element_matrix[209] += x292*(-x106*x250 - x380 - x411);
    element_matrix[210] += x89*(-x125*x15 - x412 - x413);
    element_matrix[211] += x258*(-x125*x37 - x414 - x415);
    element_matrix[212] += x268*(-x125*x52 - x414 - x416);
    element_matrix[213] += x276*(-x125*x60 - x417 - x418);
    element_matrix[214] += x292*(x125*x87 + x419 + x420);
    element_matrix[215] += x292*(-x104*x125 - x421 - x422);
    element_matrix[216] += x292*(x122*x125 + x423 + x424);
    element_matrix[217] += x292*(x125*x143 + x425 + x426);
    element_matrix[218] += x292*(-x125*x155 - x427 - x428);
    element_matrix[219] += x292*(-x125*x167 - x429 - x430);
    element_matrix[220] += x89*(-x125*x171 - x431 - x432);
    element_matrix[221] += x258*(-x125*x177 - x433 - x434);
    element_matrix[222] += x268*(-x125*x182 - x435 - x436);
    element_matrix[223] += x276*(-x437 - x438 - x439);
    element_matrix[224] += x292*(x125*x191 + x440 + x441);
    element_matrix[225] += x292*(-x125*x195 - x442 - x443);
    element_matrix[226] += x292*(x125*x199 + x444 + x445);
    element_matrix[227] += x292*(x125*x203 + x446 + x447);
    element_matrix[228] += x292*(-x125*x207 - x448 - x449);
    element_matrix[229] += x292*(-x125*x211 - x450 - x451);
    element_matrix[230] += x89*(-x125*x215 - x452 - x453);
    element_matrix[231] += x258*(-x125*x219 - x454 - x455);
    element_matrix[232] += x268*(-x125*x223 - x456 - x457);
    element_matrix[233] += x276*(-x458 - x459 - x460);
    element_matrix[234] += x292*(x125*x231 + x461 + x462);
    element_matrix[235] += x292*(-x125*x235 - x463 - x464);
    element_matrix[236] += x292*(x125*x239 + x465 + x466);
    element_matrix[237] += x292*(x125*x243 + x467 + x468);
    element_matrix[238] += x292*(-x125*x247 - x469 - x470);
    element_matrix[239] += x292*(-x125*x251 - x471 - x472);
    element_matrix[240] += x89*(x284 + x412);
    element_matrix[241] += x258*(x286 + x415);
    element_matrix[242] += x268*(x287 + x414);
    element_matrix[243] += x276*(x289 + x417);
    element_matrix[244] += x292*(-x291 - x419);
    element_matrix[245] += x292*(x294 + x421);
    element_matrix[246] += x292*(-x296 - x423);
    element_matrix[247] += x292*(-x298 - x425);
    element_matrix[248] += x292*(x300 + x427);
    element_matrix[249] += x292*(x302 + x429);
    element_matrix[250] += x89*(x304 + x431);
    element_matrix[251] += x258*(x306 + x433);
    element_matrix[252] += x268*(x311 + x436);
    element_matrix[253] += x276*(x313 + x437);
    element_matrix[254] += x292*(-x316 - x440);
    element_matrix[255] += x292*(x318 + x442);
    element_matrix[256] += x292*(-x320 - x444);
    element_matrix[257] += x292*(-x322 - x446);
    element_matrix[258] += x292*(x324 + x448);
    element_matrix[259] += x292*(x326 + x450);
    element_matrix[260] += x89*(x328 + x452);
    element_matrix[261] += x258*(x330 + x454);
    element_matrix[262] += x268*(x335 + x457);
    element_matrix[263] += x276*(x337 + x458);
    element_matrix[264] += x292*(-x340 - x461);
    element_matrix[265] += x292*(x342 + x463);
    element_matrix[266] += x292*(-x344 - x465);
    element_matrix[267] += x292*(-x346 - x467);
    element_matrix[268] += x292*(x348 + x469);
    element_matrix[269] += x292*(x350 + x471);
    element_matrix[270] += x89*(x381 + x413);
    element_matrix[271] += x258*(x354 + x414);
    element_matrix[272] += x268*(x382 + x416);
    element_matrix[273] += x276*(x383 + x418);
    element_matrix[274] += x292*(-x384 - x420);
    element_matrix[275] += x292*(x385 + x422);
    element_matrix[276] += x292*(-x386 - x424);
    element_matrix[277] += x292*(-x387 - x426);
    element_matrix[278] += x292*(x388 + x428);
    element_matrix[279] += x292*(x389 + x430);
    element_matrix[280] += x89*(x390 + x432);
    element_matrix[281] += x258*(x391 + x434);
    element_matrix[282] += x268*(x392 + x435);
    element_matrix[283] += x276*(x394 + x438);
    element_matrix[284] += x292*(-x395 - x441);
    element_matrix[285] += x292*(x396 + x443);
    element_matrix[286] += x292*(-x397 - x445);
    element_matrix[287] += x292*(-x398 - x447);
    element_matrix[288] += x292*(x399 + x449);
    element_matrix[289] += x292*(x400 + x451);
    element_matrix[290] += x89*(x401 + x453);
    element_matrix[291] += x258*(x402 + x455);
    element_matrix[292] += x268*(x403 + x456);
    element_matrix[293] += x276*(x405 + x459);
    element_matrix[294] += x292*(-x406 - x462);
    element_matrix[295] += x292*(x407 + x464);
    element_matrix[296] += x292*(-x408 - x466);
    element_matrix[297] += x292*(-x409 - x468);
    element_matrix[298] += x292*(x410 + x470);
    element_matrix[299] += x292*(x411 + x472);
    element_matrix[300] += x22*(x473 + x474 + x475);
    element_matrix[301] += x40*(x174 + x181 + x186);
    element_matrix[302] += x54*(x176 + x179 + x187);
    element_matrix[303] += x62*(x177 + x182 + x184);
    element_matrix[304] += x89*(-x477 - x478 - x479);
    element_matrix[305] += x89*(x481 + x482 + x483);
    element_matrix[306] += x89*(-x485 - x486 - x487);
    element_matrix[307] += x89*(-x489 - x490 - x491);
    element_matrix[308] += x89*(x493 + x494 + x495);
    element_matrix[309] += x89*(x497 + x498 + x499);
    element_matrix[310] += x22*(x503 + x505 + x507);
    element_matrix[311] += x40*(x509 + x513 + x515);
    element_matrix[312] += x54*(x513 + x517 + x521);
    element_matrix[313] += x62*(x515 + x521 + x523);
    element_matrix[314] += x89*(-x525 - x527 - x531);
    element_matrix[315] += x89*(x533 + x535 + x537);
    element_matrix[316] += x89*(-x539 - x541 - x543);
    element_matrix[317] += x89*(-x545 - x547 - x549);
    element_matrix[318] += x89*(x551 + x553 + x555);
    element_matrix[319] += x89*(x557 + x559 + x561);
    element_matrix[320] += x22*(x562 + x563 + x564);
    element_matrix[321] += x40*(x565 + x566 + x567);
    element_matrix[322] += x54*(x568 + x569 + x570);
    element_matrix[323] += x62*(x571 + x572 + x573);
    element_matrix[324] += x89*(-x574 - x575 - x576);
    element_matrix[325] += x89*(x577 + x578 + x579);
    element_matrix[326] += x89*(-x580 - x581 - x582);
    element_matrix[327] += x89*(-x583 - x584 - x585);
    element_matrix[328] += x89*(x586 + x587 + x588);
    element_matrix[329] += x89*(x589 + x590 + x591);
    element_matrix[330] += x40*x473;
    element_matrix[331] += x259;
    element_matrix[332] += x269;
    element_matrix[333] += x277;
    element_matrix[334] += -x258*x477;
    element_matrix[335] += x258*x481;
    element_matrix[336] += -x258*x485;
    element_matrix[337] += -x258*x489;
    element_matrix[338] += x258*x493;
    element_matrix[339] += x258*x497;
    element_matrix[340] += x40*x503;
    element_matrix[341] += x252*x509;
    element_matrix[342] += x592;
    element_matrix[343] += x593;
    element_matrix[344] += -x258*x525;
    element_matrix[345] += x258*x533;
    element_matrix[346] += -x258*x539;
    element_matrix[347] += -x258*x545;
    element_matrix[348] += x258*x551;
    element_matrix[349] += x258*x557;
    element_matrix[350] += x40*x562;
    element_matrix[351] += x594;
    element_matrix[352] += x595;
    element_matrix[353] += x596;
    element_matrix[354] += -x258*x574;
    element_matrix[355] += x258*x577;
    element_matrix[356] += -x258*x580;
    element_matrix[357] += -x258*x583;
    element_matrix[358] += x258*x586;
    element_matrix[359] += x258*x589;
    element_matrix[360] += x474*x54;
    element_matrix[361] += x260;
    element_matrix[362] += x270;
    element_matrix[363] += x278;
    element_matrix[364] += -x268*x478;
    element_matrix[365] += x268*x482;
    element_matrix[366] += -x268*x486;
    element_matrix[367] += -x268*x490;
    element_matrix[368] += x268*x494;
    element_matrix[369] += x268*x498;
    element_matrix[370] += x505*x54;
    element_matrix[371] += x592;
    element_matrix[372] += x265*x517;
    element_matrix[373] += x597;
    element_matrix[374] += -x268*x527;
    element_matrix[375] += x268*x535;
    element_matrix[376] += -x268*x541;
    element_matrix[377] += -x268*x547;
    element_matrix[378] += x268*x553;
    element_matrix[379] += x268*x559;
    element_matrix[380] += x54*x563;
    element_matrix[381] += x598;
    element_matrix[382] += x599;
    element_matrix[383] += x600;
    element_matrix[384] += -x268*x575;
    element_matrix[385] += x268*x578;
    element_matrix[386] += -x268*x581;
    element_matrix[387] += -x268*x584;
    element_matrix[388] += x268*x587;
    element_matrix[389] += x268*x590;
    element_matrix[390] += x475*x62;
    element_matrix[391] += x261;
    element_matrix[392] += x271;
    element_matrix[393] += x279;
    element_matrix[394] += -x276*x479;
    element_matrix[395] += x276*x483;
    element_matrix[396] += -x276*x487;
    element_matrix[397] += -x276*x491;
    element_matrix[398] += x276*x495;
    element_matrix[399] += x276*x499;
    element_matrix[400] += x507*x62;
    element_matrix[401] += x593;
    element_matrix[402] += x597;
    element_matrix[403] += x275*x523;
    element_matrix[404] += -x276*x531;
    element_matrix[405] += x276*x537;
    element_matrix[406] += -x276*x543;
    element_matrix[407] += -x276*x549;
    element_matrix[408] += x276*x555;
    element_matrix[409] += x276*x561;
    element_matrix[410] += x564*x62;
    element_matrix[411] += x601;
    element_matrix[412] += x602;
    element_matrix[413] += x603;
    element_matrix[414] += -x276*x576;
    element_matrix[415] += x276*x579;
    element_matrix[416] += -x276*x582;
    element_matrix[417] += -x276*x585;
    element_matrix[418] += x276*x588;
    element_matrix[419] += x276*x591;
    element_matrix[420] += x89*(-x473*x66 - x604 - x605);
    element_matrix[421] += x258*(-x308 - x606 - x607);
    element_matrix[422] += x268*(-x176*x66 - x310 - x314);
    element_matrix[423] += x276*(-x177*x66 - x311 - x313);
    element_matrix[424] += x292*(x477*x66 + x608 + x609);
    element_matrix[425] += x292*(-x481*x66 - x610 - x611);
    element_matrix[426] += x292*(x485*x66 + x612 + x613);
    element_matrix[427] += x292*(x489*x66 + x614 + x615);
    element_matrix[428] += x292*(-x493*x66 - x616 - x617);
    element_matrix[429] += x292*(-x497*x66 - x618 - x619);
    element_matrix[430] += x89*(-x503*x66 - x620 - x621);
    element_matrix[431] += x258*(-x509*x66 - x622 - x623);
    element_matrix[432] += x268*(-x513*x66 - x624 - x625);
    element_matrix[433] += x276*(-x515*x66 - x624 - x626);
    element_matrix[434] += x292*(x525*x66 + x627 + x628);
    element_matrix[435] += x292*(-x533*x66 - x629 - x630);
    element_matrix[436] += x292*(x539*x66 + x631 + x632);
    element_matrix[437] += x292*(x545*x66 + x633 + x634);
    element_matrix[438] += x292*(-x551*x66 - x635 - x636);
    element_matrix[439] += x292*(-x557*x66 - x637 - x638);
    element_matrix[440] += x89*(-x562*x66 - x639 - x640);
    element_matrix[441] += x258*(-x641 - x642 - x643);
    element_matrix[442] += x268*(-x569*x66 - x644 - x645);
    element_matrix[443] += x276*(-x572*x66 - x646 - x647);
    element_matrix[444] += x292*(x574*x66 + x648 + x649);
    element_matrix[445] += x292*(-x577*x66 - x650 - x651);
    element_matrix[446] += x292*(x580*x66 + x652 + x653);
    element_matrix[447] += x292*(x583*x66 + x654 + x655);
    element_matrix[448] += x292*(-x586*x66 - x656 - x657);
    element_matrix[449] += x292*(-x589*x66 - x658 - x659);
    element_matrix[450] += x89*(x604 + x660);
    element_matrix[451] += x258*(x362 + x606);
    element_matrix[452] += x268*(x310 + x661);
    element_matrix[453] += x276*(x311 + x391);
    element_matrix[454] += x292*(-x608 - x662);
    element_matrix[455] += x292*(x610 + x663);
    element_matrix[456] += x292*(-x612 - x664);
    element_matrix[457] += x292*(-x614 - x665);
    element_matrix[458] += x292*(x616 + x666);
    element_matrix[459] += x292*(x618 + x667);
    element_matrix[460] += x89*(x620 + x668);
    element_matrix[461] += x258*(x622 + x669);
    element_matrix[462] += x268*(x625 + x670);
    element_matrix[463] += x276*(x624 + x671);
    element_matrix[464] += x292*(-x627 - x672);
    element_matrix[465] += x292*(x629 + x673);
    element_matrix[466] += x292*(-x631 - x674);
    element_matrix[467] += x292*(-x633 - x675);
    element_matrix[468] += x292*(x635 + x676);
    element_matrix[469] += x292*(x637 + x677);
    element_matrix[470] += x89*(x639 + x678);
    element_matrix[471] += x258*(x641 + x679);
    element_matrix[472] += x268*(x644 + x680);
    element_matrix[473] += x276*(x647 + x681);
    element_matrix[474] += x292*(-x648 - x682);
    element_matrix[475] += x292*(x650 + x683);
    element_matrix[476] += x292*(-x652 - x684);
    element_matrix[477] += x292*(-x654 - x685);
    element_matrix[478] += x292*(x656 + x686);
    element_matrix[479] += x292*(x658 + x687);
    element_matrix[480] += x89*(-x106*x474 - x660 - x688);
    element_matrix[481] += x258*(-x106*x181 - x362 - x364);
    element_matrix[482] += x268*(-x393 - x661 - x689);
    element_matrix[483] += x276*(-x106*x182 - x391 - x394);
    element_matrix[484] += x292*(x106*x478 + x662 + x690);
    element_matrix[485] += x292*(-x106*x482 - x663 - x691);
    element_matrix[486] += x292*(x106*x486 + x664 + x692);
    element_matrix[487] += x292*(x106*x490 + x665 + x693);
    element_matrix[488] += x292*(-x106*x494 - x666 - x694);
    element_matrix[489] += x292*(-x106*x498 - x667 - x695);
    element_matrix[490] += x89*(-x106*x505 - x668 - x696);
    element_matrix[491] += x258*(-x106*x513 - x669 - x671);
    element_matrix[492] += x268*(-x106*x517 - x670 - x697);
    element_matrix[493] += x276*(-x106*x521 - x671 - x698);
    element_matrix[494] += x292*(x106*x527 + x672 + x699);
    element_matrix[495] += x292*(-x106*x535 - x673 - x700);
    element_matrix[496] += x292*(x106*x541 + x674 + x701);
    element_matrix[497] += x292*(x106*x547 + x675 + x702);
    element_matrix[498] += x292*(-x106*x553 - x676 - x703);
    element_matrix[499] += x292*(-x106*x559 - x677 - x704);
    element_matrix[500] += x89*(-x106*x563 - x678 - x705);
    element_matrix[501] += x258*(-x106*x566 - x679 - x706);
    element_matrix[502] += x268*(-x680 - x707 - x708);
    element_matrix[503] += x276*(-x106*x573 - x681 - x709);
    element_matrix[504] += x292*(x106*x575 + x682 + x710);
    element_matrix[505] += x292*(-x106*x578 - x683 - x711);
    element_matrix[506] += x292*(x106*x581 + x684 + x712);
    element_matrix[507] += x292*(x106*x584 + x685 + x713);
    element_matrix[508] += x292*(-x106*x587 - x686 - x714);
    element_matrix[509] += x292*(-x106*x590 - x687 - x715);
    element_matrix[510] += x89*(-x125*x475 - x716 - x717);
    element_matrix[511] += x258*(-x125*x186 - x433 - x436);
    element_matrix[512] += x268*(-x125*x187 - x434 - x435);
    element_matrix[513] += x276*(-x439 - x718 - x719);
    element_matrix[514] += x292*(x125*x479 + x720 + x721);
    element_matrix[515] += x292*(-x125*x483 - x722 - x723);
    element_matrix[516] += x292*(x125*x487 + x724 + x725);
    element_matrix[517] += x292*(x125*x491 + x726 + x727);
    element_matrix[518] += x292*(-x125*x495 - x728 - x729);
    element_matrix[519] += x292*(-x125*x499 - x730 - x731);
    element_matrix[520] += x89*(-x125*x507 - x732 - x733);
    element_matrix[521] += x258*(-x125*x515 - x734 - x735);
    element_matrix[522] += x268*(-x125*x521 - x734 - x736);
    element_matrix[523] += x276*(-x125*x523 - x737 - x738);
    element_matrix[524] += x292*(x125*x531 + x739 + x740);
    element_matrix[525] += x292*(-x125*x537 - x741 - x742);
    element_matrix[526] += x292*(x125*x543 + x743 + x744);
    element_matrix[527] += x292*(x125*x549 + x745 + x746);
    element_matrix[528] += x292*(-x125*x555 - x747 - x748);
    element_matrix[529] += x292*(-x125*x561 - x749 - x750);
    element_matrix[530] += x89*(-x125*x564 - x751 - x752);
    element_matrix[531] += x258*(-x125*x567 - x753 - x754);
    element_matrix[532] += x268*(-x125*x570 - x755 - x756);
    element_matrix[533] += x276*(-x757 - x758 - x759);
    element_matrix[534] += x292*(x125*x576 + x760 + x761);
    element_matrix[535] += x292*(-x125*x579 - x762 - x763);
    element_matrix[536] += x292*(x125*x582 + x764 + x765);
    element_matrix[537] += x292*(x125*x585 + x766 + x767);
    element_matrix[538] += x292*(-x125*x588 - x768 - x769);
    element_matrix[539] += x292*(-x125*x591 - x770 - x771);
    element_matrix[540] += x89*(x605 + x716);
    element_matrix[541] += x258*(x433 + x607);
    element_matrix[542] += x268*(x314 + x434);
    element_matrix[543] += x276*(x313 + x718);
    element_matrix[544] += x292*(-x609 - x720);
    element_matrix[545] += x292*(x611 + x722);
    element_matrix[546] += x292*(-x613 - x724);
    element_matrix[547] += x292*(-x615 - x726);
    element_matrix[548] += x292*(x617 + x728);
    element_matrix[549] += x292*(x619 + x730);
    element_matrix[550] += x89*(x621 + x732);
    element_matrix[551] += x258*(x623 + x735);
    element_matrix[552] += x268*(x624 + x734);
    element_matrix[553] += x276*(x626 + x737);
    element_matrix[554] += x292*(-x628 - x739);
    element_matrix[555] += x292*(x630 + x741);
    element_matrix[556] += x292*(-x632 - x743);
    element_matrix[557] += x292*(-x634 - x745);
    element_matrix[558] += x292*(x636 + x747);
    element_matrix[559] += x292*(x638 + x749);
    element_matrix[560] += x89*(x640 + x751);
    element_matrix[561] += x258*(x642 + x753);
    element_matrix[562] += x268*(x645 + x756);
    element_matrix[563] += x276*(x646 + x757);
    element_matrix[564] += x292*(-x649 - x760);
    element_matrix[565] += x292*(x651 + x762);
    element_matrix[566] += x292*(-x653 - x764);
    element_matrix[567] += x292*(-x655 - x766);
    element_matrix[568] += x292*(x657 + x768);
    element_matrix[569] += x292*(x659 + x770);
    element_matrix[570] += x89*(x688 + x717);
    element_matrix[571] += x258*(x364 + x436);
    element_matrix[572] += x268*(x435 + x689);
    element_matrix[573] += x276*(x394 + x719);
    element_matrix[574] += x292*(-x690 - x721);
    element_matrix[575] += x292*(x691 + x723);
    element_matrix[576] += x292*(-x692 - x725);
    element_matrix[577] += x292*(-x693 - x727);
    element_matrix[578] += x292*(x694 + x729);
    element_matrix[579] += x292*(x695 + x731);
    element_matrix[580] += x89*(x696 + x733);
    element_matrix[581] += x258*(x671 + x734);
    element_matrix[582] += x268*(x697 + x736);
    element_matrix[583] += x276*(x698 + x738);
    element_matrix[584] += x292*(-x699 - x740);
    element_matrix[585] += x292*(x700 + x742);
    element_matrix[586] += x292*(-x701 - x744);
    element_matrix[587] += x292*(-x702 - x746);
    element_matrix[588] += x292*(x703 + x748);
    element_matrix[589] += x292*(x704 + x750);
    element_matrix[590] += x89*(x705 + x752);
    element_matrix[591] += x258*(x706 + x754);
    element_matrix[592] += x268*(x707 + x755);
    element_matrix[593] += x276*(x709 + x758);
    element_matrix[594] += x292*(-x710 - x761);
    element_matrix[595] += x292*(x711 + x763);
    element_matrix[596] += x292*(-x712 - x765);
    element_matrix[597] += x292*(-x713 - x767);
    element_matrix[598] += x292*(x714 + x769);
    element_matrix[599] += x292*(x715 + x771);
    element_matrix[600] += x22*(x772 + x773 + x774);
    element_matrix[601] += x40*(x216 + x222 + x226);
    element_matrix[602] += x54*(x218 + x220 + x227);
    element_matrix[603] += x62*(x219 + x223 + x224);
    element_matrix[604] += x89*(-x775 - x776 - x777);
    element_matrix[605] += x89*(x778 + x779 + x780);
    element_matrix[606] += x89*(-x781 - x782 - x783);
    element_matrix[607] += x89*(-x784 - x785 - x786);
    element_matrix[608] += x89*(x787 + x788 + x789);
    element_matrix[609] += x89*(x790 + x791 + x792);
    element_matrix[610] += x22*(x793 + x794 + x795);
    element_matrix[611] += x40*(x565 + x569 + x572);
    element_matrix[612] += x54*(x566 + x568 + x573);
    element_matrix[613] += x62*(x567 + x570 + x571);
    element_matrix[614] += x89*(-x796 - x797 - x798);
    element_matrix[615] += x89*(x799 + x800 + x801);
    element_matrix[616] += x89*(-x802 - x803 - x804);
    element_matrix[617] += x89*(-x805 - x806 - x807);
    element_matrix[618] += x89*(x808 + x809 + x810);
    element_matrix[619] += x89*(x811 + x812 + x813);
    element_matrix[620] += x22*(x815 + x816 + x817);
    element_matrix[621] += x40*(x818 + x820 + x821);
    element_matrix[622] += x54*(x820 + x822 + x824);
    element_matrix[623] += x62*(x821 + x824 + x825);
    element_matrix[624] += x89*(-x826 - x827 - x829);
    element_matrix[625] += x89*(x830 + x831 + x832);
    element_matrix[626] += x89*(-x833 - x834 - x835);
    element_matrix[627] += x89*(-x836 - x837 - x838);
    element_matrix[628] += x89*(x839 + x840 + x841);
    element_matrix[629] += x89*(x842 + x843 + x844);
    element_matrix[630] += x40*x772;
    element_matrix[631] += x262;
    element_matrix[632] += x272;
    element_matrix[633] += x280;
    element_matrix[634] += -x258*x775;
    element_matrix[635] += x258*x778;
    element_matrix[636] += -x258*x781;
    element_matrix[637] += -x258*x784;
    element_matrix[638] += x258*x787;
    element_matrix[639] += x258*x790;
    element_matrix[640] += x40*x793;
    element_matrix[641] += x594;
    element_matrix[642] += x598;
    element_matrix[643] += x601;
    element_matrix[644] += -x258*x796;
    element_matrix[645] += x258*x799;
    element_matrix[646] += -x258*x802;
    element_matrix[647] += -x258*x805;
    element_matrix[648] += x258*x808;
    element_matrix[649] += x258*x811;
    element_matrix[650] += x40*x815;
    element_matrix[651] += x252*x818;
    element_matrix[652] += x845;
    element_matrix[653] += x846;
    element_matrix[654] += -x258*x826;
    element_matrix[655] += x258*x830;
    element_matrix[656] += -x258*x833;
    element_matrix[657] += -x258*x836;
    element_matrix[658] += x258*x839;
    element_matrix[659] += x258*x842;
    element_matrix[660] += x54*x773;
    element_matrix[661] += x263;
    element_matrix[662] += x273;
    element_matrix[663] += x281;
    element_matrix[664] += -x268*x776;
    element_matrix[665] += x268*x779;
    element_matrix[666] += -x268*x782;
    element_matrix[667] += -x268*x785;
    element_matrix[668] += x268*x788;
    element_matrix[669] += x268*x791;
    element_matrix[670] += x54*x794;
    element_matrix[671] += x595;
    element_matrix[672] += x599;
    element_matrix[673] += x602;
    element_matrix[674] += -x268*x797;
    element_matrix[675] += x268*x800;
    element_matrix[676] += -x268*x803;
    element_matrix[677] += -x268*x806;
    element_matrix[678] += x268*x809;
    element_matrix[679] += x268*x812;
    element_matrix[680] += x54*x816;
    element_matrix[681] += x845;
    element_matrix[682] += x265*x822;
    element_matrix[683] += x847;
    element_matrix[684] += -x268*x827;
    element_matrix[685] += x268*x831;
    element_matrix[686] += -x268*x834;
    element_matrix[687] += -x268*x837;
    element_matrix[688] += x268*x840;
    element_matrix[689] += x268*x843;
    element_matrix[690] += x62*x774;
    element_matrix[691] += x264;
    element_matrix[692] += x274;
    element_matrix[693] += x282;
    element_matrix[694] += -x276*x777;
    element_matrix[695] += x276*x780;
    element_matrix[696] += -x276*x783;
    element_matrix[697] += -x276*x786;
    element_matrix[698] += x276*x789;
    element_matrix[699] += x276*x792;
    element_matrix[700] += x62*x795;
    element_matrix[701] += x596;
    element_matrix[702] += x600;
    element_matrix[703] += x603;
    element_matrix[704] += -x276*x798;
    element_matrix[705] += x276*x801;
    element_matrix[706] += -x276*x804;
    element_matrix[707] += -x276*x807;
    element_matrix[708] += x276*x810;
    element_matrix[709] += x276*x813;
    element_matrix[710] += x62*x817;
    element_matrix[711] += x846;
    element_matrix[712] += x847;
    element_matrix[713] += x275*x825;
    element_matrix[714] += -x276*x829;
    element_matrix[715] += x276*x832;
    element_matrix[716] += -x276*x835;
    element_matrix[717] += -x276*x838;
    element_matrix[718] += x276*x841;
    element_matrix[719] += x276*x844;
    element_matrix[720] += x89*(-x66*x772 - x848 - x849);
    element_matrix[721] += x258*(-x332 - x850 - x851);
    element_matrix[722] += x268*(-x218*x66 - x334 - x338);
    element_matrix[723] += x276*(-x219*x66 - x335 - x337);
    element_matrix[724] += x292*(x66*x775 + x852 + x853);
    element_matrix[725] += x292*(-x66*x778 - x854 - x855);
    element_matrix[726] += x292*(x66*x781 + x856 + x857);
    element_matrix[727] += x292*(x66*x784 + x858 + x859);
    element_matrix[728] += x292*(-x66*x787 - x860 - x861);
    element_matrix[729] += x292*(-x66*x790 - x862 - x863);
    element_matrix[730] += x89*(-x66*x793 - x864 - x865);
    element_matrix[731] += x258*(-x643 - x866 - x867);
    element_matrix[732] += x268*(-x566*x66 - x644 - x647);
    element_matrix[733] += x276*(-x567*x66 - x645 - x646);
    element_matrix[734] += x292*(x66*x796 + x868 + x869);
    element_matrix[735] += x292*(-x66*x799 - x870 - x871);
    element_matrix[736] += x292*(x66*x802 + x872 + x873);
    element_matrix[737] += x292*(x66*x805 + x874 + x875);
    element_matrix[738] += x292*(-x66*x808 - x876 - x877);
    element_matrix[739] += x292*(-x66*x811 - x878 - x879);
    element_matrix[740] += x89*(-x66*x815 - x880 - x881);
    element_matrix[741] += x258*(-x66*x818 - x882 - x883);
    element_matrix[742] += x268*(-x66*x820 - x884 - x885);
    element_matrix[743] += x276*(-x66*x821 - x884 - x886);
    element_matrix[744] += x292*(x66*x826 + x887 + x888);
    element_matrix[745] += x292*(-x66*x830 - x889 - x890);
    element_matrix[746] += x292*(x66*x833 + x891 + x892);
    element_matrix[747] += x292*(x66*x836 + x893 + x894);
    element_matrix[748] += x292*(-x66*x839 - x895 - x896);
    element_matrix[749] += x292*(-x66*x842 - x897 - x898);
    element_matrix[750] += x89*(x848 + x899);
    element_matrix[751] += x258*(x372 + x850);
    element_matrix[752] += x268*(x334 + x900);
    element_matrix[753] += x276*(x335 + x402);
    element_matrix[754] += x292*(-x852 - x901);
    element_matrix[755] += x292*(x854 + x902);
    element_matrix[756] += x292*(-x856 - x903);
    element_matrix[757] += x292*(-x858 - x904);
    element_matrix[758] += x292*(x860 + x905);
    element_matrix[759] += x292*(x862 + x906);
    element_matrix[760] += x89*(x864 + x907);
    element_matrix[761] += x258*(x679 + x866);
    element_matrix[762] += x268*(x644 + x908);
    element_matrix[763] += x276*(x645 + x706);
    element_matrix[764] += x292*(-x868 - x909);
    element_matrix[765] += x292*(x870 + x910);
    element_matrix[766] += x292*(-x872 - x911);
    element_matrix[767] += x292*(-x874 - x912);
    element_matrix[768] += x292*(x876 + x913);
    element_matrix[769] += x292*(x878 + x914);
    element_matrix[770] += x89*(x880 + x915);
    element_matrix[771] += x258*(x882 + x916);
    element_matrix[772] += x268*(x885 + x917);
    element_matrix[773] += x276*(x884 + x918);
    element_matrix[774] += x292*(-x887 - x919);
    element_matrix[775] += x292*(x889 + x920);
    element_matrix[776] += x292*(-x891 - x921);
    element_matrix[777] += x292*(-x893 - x922);
    element_matrix[778] += x292*(x895 + x923);
    element_matrix[779] += x292*(x897 + x924);
    element_matrix[780] += x89*(-x106*x773 - x899 - x925);
    element_matrix[781] += x258*(-x106*x222 - x372 - x374);
    element_matrix[782] += x268*(-x404 - x900 - x926);
    element_matrix[783] += x276*(-x106*x223 - x402 - x405);
    element_matrix[784] += x292*(x106*x776 + x901 + x927);
    element_matrix[785] += x292*(-x106*x779 - x902 - x928);
    element_matrix[786] += x292*(x106*x782 + x903 + x929);
    element_matrix[787] += x292*(x106*x785 + x904 + x930);
    element_matrix[788] += x292*(-x106*x788 - x905 - x931);
    element_matrix[789] += x292*(-x106*x791 - x906 - x932);
    element_matrix[790] += x89*(-x106*x794 - x907 - x933);
    element_matrix[791] += x258*(-x106*x569 - x679 - x681);
    element_matrix[792] += x268*(-x708 - x908 - x934);
    element_matrix[793] += x276*(-x106*x570 - x706 - x709);
    element_matrix[794] += x292*(x106*x797 + x909 + x935);
    element_matrix[795] += x292*(-x106*x800 - x910 - x936);
    element_matrix[796] += x292*(x106*x803 + x911 + x937);
    element_matrix[797] += x292*(x106*x806 + x912 + x938);
    element_matrix[798] += x292*(-x106*x809 - x913 - x939);
    element_matrix[799] += x292*(-x106*x812 - x914 - x940);
    element_matrix[800] += x89*(-x106*x816 - x915 - x941);
    element_matrix[801] += x258*(-x106*x820 - x916 - x918);
    element_matrix[802] += x268*(-x106*x822 - x917 - x942);
    element_matrix[803] += x276*(-x106*x824 - x918 - x943);
    element_matrix[804] += x292*(x106*x827 + x919 + x944);
    element_matrix[805] += x292*(-x106*x831 - x920 - x945);
    element_matrix[806] += x292*(x106*x834 + x921 + x946);
    element_matrix[807] += x292*(x106*x837 + x922 + x947);
    element_matrix[808] += x292*(-x106*x840 - x923 - x948);
    element_matrix[809] += x292*(-x106*x843 - x924 - x949);
    element_matrix[810] += x89*(-x125*x774 - x950 - x951);
    element_matrix[811] += x258*(-x125*x226 - x454 - x457);
    element_matrix[812] += x268*(-x125*x227 - x455 - x456);
    element_matrix[813] += x276*(-x460 - x952 - x953);
    element_matrix[814] += x292*(x125*x777 + x954 + x955);
    element_matrix[815] += x292*(-x125*x780 - x956 - x957);
    element_matrix[816] += x292*(x125*x783 + x958 + x959);
    element_matrix[817] += x292*(x125*x786 + x960 + x961);
    element_matrix[818] += x292*(-x125*x789 - x962 - x963);
    element_matrix[819] += x292*(-x125*x792 - x964 - x965);
    element_matrix[820] += x89*(-x125*x795 - x966 - x967);
    element_matrix[821] += x258*(-x125*x572 - x753 - x756);
    element_matrix[822] += x268*(-x125*x573 - x754 - x755);
    element_matrix[823] += x276*(-x759 - x968 - x969);
    element_matrix[824] += x292*(x125*x798 + x970 + x971);
    element_matrix[825] += x292*(-x125*x801 - x972 - x973);
    element_matrix[826] += x292*(x125*x804 + x974 + x975);
    element_matrix[827] += x292*(x125*x807 + x976 + x977);
    element_matrix[828] += x292*(-x125*x810 - x978 - x979);
    element_matrix[829] += x292*(-x125*x813 - x980 - x981);
    element_matrix[830] += x89*(-x125*x817 - x982 - x983);
    element_matrix[831] += x258*(-x125*x821 - x984 - x985);
    element_matrix[832] += x268*(-x125*x824 - x984 - x986);
    element_matrix[833] += x276*(-x125*x825 - x987 - x988);
    element_matrix[834] += x292*(x125*x829 + x989 + x990);
    element_matrix[835] += x292*(-x125*x832 - x991 - x992);
    element_matrix[836] += x292*(x125*x835 + x993 + x994);
    element_matrix[837] += x292*(x125*x838 + x995 + x996);
    element_matrix[838] += x292*(-x125*x841 - x997 - x998);
    element_matrix[839] += x292*(-x1000 - x125*x844 - x999);
    element_matrix[840] += x89*(x849 + x950);
    element_matrix[841] += x258*(x454 + x851);
    element_matrix[842] += x268*(x338 + x455);
    element_matrix[843] += x276*(x337 + x952);
    element_matrix[844] += x292*(-x853 - x954);
    element_matrix[845] += x292*(x855 + x956);
    element_matrix[846] += x292*(-x857 - x958);
    element_matrix[847] += x292*(-x859 - x960);
    element_matrix[848] += x292*(x861 + x962);
    element_matrix[849] += x292*(x863 + x964);
    element_matrix[850] += x89*(x865 + x966);
    element_matrix[851] += x258*(x753 + x867);
    element_matrix[852] += x268*(x647 + x754);
    element_matrix[853] += x276*(x646 + x968);
    element_matrix[854] += x292*(-x869 - x970);
    element_matrix[855] += x292*(x871 + x972);
    element_matrix[856] += x292*(-x873 - x974);
    element_matrix[857] += x292*(-x875 - x976);
    element_matrix[858] += x292*(x877 + x978);
    element_matrix[859] += x292*(x879 + x980);
    element_matrix[860] += x89*(x881 + x982);
    element_matrix[861] += x258*(x883 + x985);
    element_matrix[862] += x268*(x884 + x984);
    element_matrix[863] += x276*(x886 + x987);
    element_matrix[864] += x292*(-x888 - x989);
    element_matrix[865] += x292*(x890 + x991);
    element_matrix[866] += x292*(-x892 - x993);
    element_matrix[867] += x292*(-x894 - x995);
    element_matrix[868] += x292*(x896 + x997);
    element_matrix[869] += x292*(x898 + x999);
    element_matrix[870] += x89*(x925 + x951);
    element_matrix[871] += x258*(x374 + x457);
    element_matrix[872] += x268*(x456 + x926);
    element_matrix[873] += x276*(x405 + x953);
    element_matrix[874] += x292*(-x927 - x955);
    element_matrix[875] += x292*(x928 + x957);
    element_matrix[876] += x292*(-x929 - x959);
    element_matrix[877] += x292*(-x930 - x961);
    element_matrix[878] += x292*(x931 + x963);
    element_matrix[879] += x292*(x932 + x965);
    element_matrix[880] += x89*(x933 + x967);
    element_matrix[881] += x258*(x681 + x756);
    element_matrix[882] += x268*(x755 + x934);
    element_matrix[883] += x276*(x709 + x969);
    element_matrix[884] += x292*(-x935 - x971);
    element_matrix[885] += x292*(x936 + x973);
    element_matrix[886] += x292*(-x937 - x975);
    element_matrix[887] += x292*(-x938 - x977);
    element_matrix[888] += x292*(x939 + x979);
    element_matrix[889] += x292*(x940 + x981);
    element_matrix[890] += x89*(x941 + x983);
    element_matrix[891] += x258*(x918 + x984);
    element_matrix[892] += x268*(x942 + x986);
    element_matrix[893] += x276*(x943 + x988);
    element_matrix[894] += x292*(-x944 - x990);
    element_matrix[895] += x292*(x945 + x992);
    element_matrix[896] += x292*(-x946 - x994);
    element_matrix[897] += x292*(-x947 - x996);
    element_matrix[898] += x292*(x948 + x998);
    element_matrix[899] += x292*(x1000 + x949);
}


static SFEM_INLINE void tet10_linear_elasticity_apply_adj(const scalar_t mu,
                                                          const scalar_t lambda,
                                                          const scalar_t *const SFEM_RESTRICT
                                                                  adjugate,
                                                          const scalar_t jacobian_determinant,
                                                          const scalar_t qx,
                                                          const scalar_t qy,
                                                          const scalar_t qz,
                                                          const scalar_t qw,
                                                          const scalar_t *const SFEM_RESTRICT ux,
                                                          const scalar_t *const SFEM_RESTRICT uy,
                                                          const scalar_t *const SFEM_RESTRICT uz,
                                                          accumulator_t *const SFEM_RESTRICT outx,
                                                          accumulator_t *const SFEM_RESTRICT outy,
                                                          accumulator_t *const SFEM_RESTRICT outz) {
    scalar_t disp_grad[9] = {0};

#define MICRO_KERNEL_USE_CODEGEN 1

#if MICRO_KERNEL_USE_CODEGEN
    // Code-gen way

    const scalar_t denom = 1;
    {
        const scalar_t x0 = 1.0 / jacobian_determinant;
        const scalar_t x1 = 4 * qx;
        const scalar_t x2 = x1 - 1;
        const scalar_t x3 = 4 * qy;
        const scalar_t x4 = -ux[6] * x3;
        const scalar_t x5 = qz - 1;
        const scalar_t x6 = 8 * qx + 4 * qy + 4 * x5;
        const scalar_t x7 = 4 * qz;
        const scalar_t x8 = x1 + x3 + x7 - 3;
        const scalar_t x9 = ux[0] * x8;
        const scalar_t x10 = -ux[7] * x7 + x9;
        const scalar_t x11 = ux[1] * x2 - ux[4] * x6 + ux[5] * x3 + ux[8] * x7 + x10 + x4;
        const scalar_t x12 = x3 - 1;
        const scalar_t x13 = -ux[4] * x1;
        const scalar_t x14 = 4 * qx + 8 * qy + 4 * x5;
        const scalar_t x15 = ux[2] * x12 + ux[5] * x1 - ux[6] * x14 + ux[9] * x7 + x10 + x13;
        const scalar_t x16 = x7 - 1;
        const scalar_t x17 = 4 * qx + 4 * qy + 8 * qz - 4;
        const scalar_t x18 = ux[3] * x16 - ux[7] * x17 + ux[8] * x1 + ux[9] * x3 + x13 + x4 + x9;
        const scalar_t x19 = -uy[6] * x3;
        const scalar_t x20 = uy[0] * x8;
        const scalar_t x21 = -uy[7] * x7 + x20;
        const scalar_t x22 = uy[1] * x2 - uy[4] * x6 + uy[5] * x3 + uy[8] * x7 + x19 + x21;
        const scalar_t x23 = -uy[4] * x1;
        const scalar_t x24 = uy[2] * x12 + uy[5] * x1 - uy[6] * x14 + uy[9] * x7 + x21 + x23;
        const scalar_t x25 = uy[3] * x16 - uy[7] * x17 + uy[8] * x1 + uy[9] * x3 + x19 + x20 + x23;
        const scalar_t x26 = -uz[6] * x3;
        const scalar_t x27 = uz[0] * x8;
        const scalar_t x28 = -uz[7] * x7 + x27;
        const scalar_t x29 = uz[1] * x2 - uz[4] * x6 + uz[5] * x3 + uz[8] * x7 + x26 + x28;
        const scalar_t x30 = -uz[4] * x1;
        const scalar_t x31 = uz[2] * x12 + uz[5] * x1 - uz[6] * x14 + uz[9] * x7 + x28 + x30;
        const scalar_t x32 = uz[3] * x16 - uz[7] * x17 + uz[8] * x1 + uz[9] * x3 + x26 + x27 + x30;
        disp_grad[0] = x0 * (adjugate[0] * x11 + adjugate[3] * x15 + adjugate[6] * x18);
        disp_grad[1] = x0 * (adjugate[1] * x11 + adjugate[4] * x15 + adjugate[7] * x18);
        disp_grad[2] = x0 * (adjugate[2] * x11 + adjugate[5] * x15 + adjugate[8] * x18);
        disp_grad[3] = x0 * (adjugate[0] * x22 + adjugate[3] * x24 + adjugate[6] * x25);
        disp_grad[4] = x0 * (adjugate[1] * x22 + adjugate[4] * x24 + adjugate[7] * x25);
        disp_grad[5] = x0 * (adjugate[2] * x22 + adjugate[5] * x24 + adjugate[8] * x25);
        disp_grad[6] = x0 * (adjugate[0] * x29 + adjugate[3] * x31 + adjugate[6] * x32);
        disp_grad[7] = x0 * (adjugate[1] * x29 + adjugate[4] * x31 + adjugate[7] * x32);
        disp_grad[8] = x0 * (adjugate[2] * x29 + adjugate[5] * x31 + adjugate[8] * x32);
    }
#else
    // Programmatic way

    const scalar_t denom = jacobian_determinant;
    {
        scalar_t temp[9] = {0};
        scalar_t grad[10];

        tet10_ref_shape_grad_x(qx, qy, qz, grad);
#pragma unroll
        for (int i = 0; i < 10; i++) {
            const scalar_t g = grad[i];
            temp[0] += u[i] * g;
            temp[3] += u[10 + i] * g;
            temp[6] += u[20 + i] * g;
        }

        tet10_ref_shape_grad_y(qx, qy, qz, grad);
#pragma unroll
        for (int i = 0; i < 10; i++) {
            const scalar_t g = grad[i];
            temp[1] += u[i] * g;
            temp[4] += u[10 + i] * g;
            temp[7] += u[20 + i] * g;
        }

        tet10_ref_shape_grad_z(qx, qy, qz, grad);
#pragma unroll
        for (int i = 0; i < 10; i++) {
            const scalar_t g = grad[i];
            temp[2] += u[i] * g;
            temp[5] += u[10 + i] * g;
            temp[8] += u[20 + i] * g;
        }

        for (int i = 0; i < 3; i++) {
#pragma unroll
            for (int j = 0; j < 3; j++) {
#pragma unroll
                for (int k = 0; k < 3; k++) {
                    disp_grad[i * 3 + j] += temp[i * 3 + k] * adjugate[k * 3 + j];
                }
            }
        }
    }

#endif
    // Includes first Piola-Kirchoff stress: P^T * J^-T * det(J)

    scalar_t *P_tXJinv_t = disp_grad;
    {
        const scalar_t x0 = (1.0 / 6.0) * mu;
        const scalar_t x1 = x0 * (disp_grad[1] + disp_grad[3]);
        const scalar_t x2 = x0 * (disp_grad[2] + disp_grad[6]);
        const scalar_t x3 = 2 * mu;
        const scalar_t x4 = lambda * (disp_grad[0] + disp_grad[4] + disp_grad[8]);
        const scalar_t x5 = (1.0 / 6.0) * disp_grad[0] * x3 + (1.0 / 6.0) * x4;
        const scalar_t x6 = x0 * (disp_grad[5] + disp_grad[7]);
        const scalar_t x7 = (1.0 / 6.0) * disp_grad[4] * x3 + (1.0 / 6.0) * x4;
        const scalar_t x8 = (1.0 / 6.0) * disp_grad[8] * x3 + (1.0 / 6.0) * x4;
        P_tXJinv_t[0] = adjugate[0] * x5 + adjugate[1] * x1 + adjugate[2] * x2;
        P_tXJinv_t[1] = adjugate[3] * x5 + adjugate[4] * x1 + adjugate[5] * x2;
        P_tXJinv_t[2] = adjugate[6] * x5 + adjugate[7] * x1 + adjugate[8] * x2;
        P_tXJinv_t[3] = adjugate[0] * x1 + adjugate[1] * x7 + adjugate[2] * x6;
        P_tXJinv_t[4] = adjugate[3] * x1 + adjugate[4] * x7 + adjugate[5] * x6;
        P_tXJinv_t[5] = adjugate[6] * x1 + adjugate[7] * x7 + adjugate[8] * x6;
        P_tXJinv_t[6] = adjugate[0] * x2 + adjugate[1] * x6 + adjugate[2] * x8;
        P_tXJinv_t[7] = adjugate[3] * x2 + adjugate[4] * x6 + adjugate[5] * x8;
        P_tXJinv_t[8] = adjugate[6] * x2 + adjugate[7] * x6 + adjugate[8] * x8;
    }

    // Scale by quadrature weight
    for (int i = 0; i < 9; i++) {
        P_tXJinv_t[i] *= qw / denom;
    }

// On CPU both versions are equivalent
#if MICRO_KERNEL_USE_CODEGEN
    {
        const scalar_t x0 = 4 * qx;
        const scalar_t x1 = 4 * qy;
        const scalar_t x2 = 4 * qz;
        const scalar_t x3 = x0 + x1 + x2 - 3;
        const scalar_t x4 = x0 - 1;
        const scalar_t x5 = x1 - 1;
        const scalar_t x6 = x2 - 1;
        const scalar_t x7 = P_tXJinv_t[1] * x0;
        const scalar_t x8 = P_tXJinv_t[2] * x0;
        const scalar_t x9 = qz - 1;
        const scalar_t x10 = 8 * qx + 4 * qy + 4 * x9;
        const scalar_t x11 = P_tXJinv_t[0] * x1;
        const scalar_t x12 = P_tXJinv_t[2] * x1;
        const scalar_t x13 = 4 * qx + 8 * qy + 4 * x9;
        const scalar_t x14 = P_tXJinv_t[0] * x2;
        const scalar_t x15 = P_tXJinv_t[1] * x2;
        const scalar_t x16 = 4 * qx + 4 * qy + 8 * qz - 4;
        const scalar_t x17 = P_tXJinv_t[4] * x0;
        const scalar_t x18 = P_tXJinv_t[5] * x0;
        const scalar_t x19 = P_tXJinv_t[3] * x1;
        const scalar_t x20 = P_tXJinv_t[5] * x1;
        const scalar_t x21 = P_tXJinv_t[3] * x2;
        const scalar_t x22 = P_tXJinv_t[4] * x2;
        const scalar_t x23 = P_tXJinv_t[7] * x0;
        const scalar_t x24 = P_tXJinv_t[8] * x0;
        const scalar_t x25 = P_tXJinv_t[6] * x1;
        const scalar_t x26 = P_tXJinv_t[8] * x1;
        const scalar_t x27 = P_tXJinv_t[6] * x2;
        const scalar_t x28 = P_tXJinv_t[7] * x2;
        outx[0] += x3 * (P_tXJinv_t[0] + P_tXJinv_t[1] + P_tXJinv_t[2]);
        outx[1] += P_tXJinv_t[0] * x4;
        outx[2] += P_tXJinv_t[1] * x5;
        outx[3] += P_tXJinv_t[2] * x6;
        outx[4] += -P_tXJinv_t[0] * x10 - x7 - x8;
        outx[5] += x11 + x7;
        outx[6] += -P_tXJinv_t[1] * x13 - x11 - x12;
        outx[7] += -P_tXJinv_t[2] * x16 - x14 - x15;
        outx[8] += x14 + x8;
        outx[9] += x12 + x15;

        outy[0] += x3 * (P_tXJinv_t[3] + P_tXJinv_t[4] + P_tXJinv_t[5]);
        outy[1] += P_tXJinv_t[3] * x4;
        outy[2] += P_tXJinv_t[4] * x5;
        outy[3] += P_tXJinv_t[5] * x6;
        outy[4] += -P_tXJinv_t[3] * x10 - x17 - x18;
        outy[5] += x17 + x19;
        outy[6] += -P_tXJinv_t[4] * x13 - x19 - x20;
        outy[7] += -P_tXJinv_t[5] * x16 - x21 - x22;
        outy[8] += x18 + x21;
        outy[9] += x20 + x22;

        outz[0] += x3 * (P_tXJinv_t[6] + P_tXJinv_t[7] + P_tXJinv_t[8]);
        outz[1] += P_tXJinv_t[6] * x4;
        outz[2] += P_tXJinv_t[7] * x5;
        outz[3] += P_tXJinv_t[8] * x6;
        outz[4] += -P_tXJinv_t[6] * x10 - x23 - x24;
        outz[5] += x23 + x25;
        outz[6] += -P_tXJinv_t[7] * x13 - x25 - x26;
        outz[7] += -P_tXJinv_t[8] * x16 - x27 - x28;
        outz[8] += x24 + x27;
        outz[9] += x26 + x28;
    }

#else

    {
        scalar_t grad[10];
        tet10_ref_shape_grad_x(qx, qy, qz, grad);

#pragma unroll
        for (int i = 0; i < 10; i++) {
            scalar_t g = grad[i];
            outx[i] += P_tXJinv_t[0] * g;
            outy[i] += P_tXJinv_t[3] * g;
            outz[i] += P_tXJinv_t[6] * g;
        }

        tet10_ref_shape_grad_y(qx, qy, qz, grad);

#pragma unroll
        for (int i = 0; i < 10; i++) {
            scalar_t g = grad[i];
            outx[i] += P_tXJinv_t[1] * g;
            outy[i] += P_tXJinv_t[4] * g;
            outz[i] += P_tXJinv_t[7] * g;
        }

        tet10_ref_shape_grad_z(qx, qy, qz, grad);

#pragma unroll
        for (int i = 0; i < 10; i++) {
            scalar_t g = grad[i];
            outx[i] += P_tXJinv_t[2] * g;
            outy[i] += P_tXJinv_t[5] * g;
            outz[i] += P_tXJinv_t[8] * g;
        }
    }

#endif

#undef MICRO_KERNEL_USE_CODEGEN
}


#endif  // TET10_LINEAR_ELASTICITY_INLINE_CPU_H
